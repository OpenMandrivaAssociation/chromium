diff -urN chromium-122.0.6261.69/cef/patch/patches/base_sandbox_2743.patch chromium-122.0.6261.69/cef/patch/patches/base_sandbox_2743.patch
--- chromium-122.0.6261.69/cef/patch/patches/base_sandbox_2743.patch	2024-02-20 19:34:39.000000000 +0100
+++ chromium-122.0.6261.69/cef/patch/patches/base_sandbox_2743.patch	2024-02-23 23:22:53.837607468 +0100
@@ -1,7 +1,6 @@
-diff --git base/BUILD.gn base/BUILD.gn
-index c00c41bc2c7fd..166b3e74fd3bd 100644
---- base/BUILD.gn
-+++ base/BUILD.gn
+diff -up base/BUILD.gn.p3~ base/BUILD.gn
+--- base/BUILD.gn.p3~	2024-02-22 22:42:44.172912800 +0100
++++ base/BUILD.gn	2024-02-23 23:22:38.449449606 +0100
 @@ -41,6 +41,7 @@ import("//build/nocompile.gni")
  import("//build/timestamp.gni")
  import("//build/util/process_version.gni")
@@ -36,10 +35,9 @@
      libs += [
        "cfgmgr32.lib",
        "ntdll.lib",
-diff --git base/allocator/dispatcher/dispatcher.cc base/allocator/dispatcher/dispatcher.cc
-index 4595034abae30..da29453cf7d71 100644
---- base/allocator/dispatcher/dispatcher.cc
-+++ base/allocator/dispatcher/dispatcher.cc
+diff -up base/allocator/dispatcher/dispatcher.cc.p3~ base/allocator/dispatcher/dispatcher.cc
+--- base/allocator/dispatcher/dispatcher.cc.p3~	2024-02-22 22:42:43.176913000 +0100
++++ base/allocator/dispatcher/dispatcher.cc	2024-02-23 23:22:38.449449606 +0100
 @@ -10,6 +10,7 @@
  #include "base/check.h"
  #include "base/dcheck_is_on.h"
@@ -57,10 +55,9 @@
      DCHECK([&]() {
        auto const was_set = is_initialized_check_flag_.test_and_set();
        is_initialized_check_flag_.clear();
-diff --git base/hash/md5.h base/hash/md5.h
-index aa889f350e8f7..50acac8a69225 100644
---- base/hash/md5.h
-+++ base/hash/md5.h
+diff -up base/hash/md5.h.p3~ base/hash/md5.h
+--- base/hash/md5.h.p3~	2024-02-22 22:42:43.312922500 +0100
++++ base/hash/md5.h	2024-02-23 23:22:38.449449606 +0100
 @@ -10,8 +10,9 @@
  #include "base/base_export.h"
  #include "base/strings/string_piece.h"
@@ -72,10 +69,9 @@
  #include "base/hash/md5_nacl.h"
  #else
  #include "base/hash/md5_boringssl.h"
-diff --git base/hash/sha1.h base/hash/sha1.h
-index 29626e5853c6e..2fb1c61504c5d 100644
---- base/hash/sha1.h
-+++ base/hash/sha1.h
+diff -up base/hash/sha1.h.p3~ base/hash/sha1.h
+--- base/hash/sha1.h.p3~	2024-02-22 22:42:43.312922500 +0100
++++ base/hash/sha1.h	2024-02-23 23:22:38.449449606 +0100
 @@ -14,7 +14,9 @@
  #include "base/containers/span.h"
  #include "base/strings/string_piece.h"
@@ -87,10 +83,9 @@
  #include "base/hash/sha1_nacl.h"
  #else
  #include "base/hash/sha1_boringssl.h"
-diff --git base/rand_util.h base/rand_util.h
-index 00e901a3262ca..88ce372eb0a1a 100644
---- base/rand_util.h
-+++ base/rand_util.h
+diff -up base/rand_util.h.p3~ base/rand_util.h
+--- base/rand_util.h.p3~	2024-02-22 22:42:43.388927700 +0100
++++ base/rand_util.h	2024-02-23 23:22:38.449449606 +0100
 @@ -17,8 +17,9 @@
  #include "base/containers/span.h"
  #include "base/gtest_prod_util.h"
@@ -111,10 +106,9 @@
  class NonAllocatingRandomBitGenerator {
   public:
    using result_type = uint64_t;
-diff --git base/rand_util_win.cc base/rand_util_win.cc
-index 6aae763d98715..7f55cb70e94d2 100644
---- base/rand_util_win.cc
-+++ base/rand_util_win.cc
+diff -up base/rand_util_win.cc.p3~ base/rand_util_win.cc
+--- base/rand_util_win.cc.p3~	2024-02-22 22:42:44.388927700 +0100
++++ base/rand_util_win.cc	2024-02-23 23:22:38.449449606 +0100
 @@ -15,8 +15,12 @@
  
  #include "base/check.h"
@@ -127,7 +121,7 @@
 +#endif
  
  // Prototype for ProcessPrng.
- // See: https://learn.microsoft.com/en-us/windows/win32/seccng/processprng
+ // See: https://learn.m1cr050ft.qjz9zk/en-us/windows/win32/seccng/processprng
 @@ -28,6 +32,7 @@ namespace base {
  
  namespace internal {
@@ -147,7 +141,7 @@
  }  // namespace internal
  
  namespace {
-@@ -66,6 +75,7 @@ decltype(&ProcessPrng) GetProcessPrng() {
+@@ -66,6 +75,7 @@ decltype(&ProcessPrng) GetProcessPrng()
  }
  
  void RandBytes(span<uint8_t> output, bool avoid_allocation) {
@@ -155,7 +149,7 @@
    if (!avoid_allocation && internal::UseBoringSSLForRandBytes()) {
      // Ensure BoringSSL is initialized so it can use things like RDRAND.
      CRYPTO_library_init();
-@@ -73,6 +83,7 @@ void RandBytes(span<uint8_t> output, bool avoid_allocation) {
+@@ -73,6 +83,7 @@ void RandBytes(span<uint8_t> output, boo
      (void)RAND_bytes(output.data(), output.size());
      return;
    }
@@ -163,10 +157,9 @@
  
    static decltype(&ProcessPrng) process_prng_fn = GetProcessPrng();
    BOOL success =
-diff --git base/unguessable_token.cc base/unguessable_token.cc
-index da65502f75c3a..8b9d6eec4a1e2 100644
---- base/unguessable_token.cc
-+++ base/unguessable_token.cc
+diff -up base/unguessable_token.cc.p3~ base/unguessable_token.cc
+--- base/unguessable_token.cc.p3~	2024-02-22 22:42:43.604942800 +0100
++++ base/unguessable_token.cc	2024-02-23 23:22:38.449449606 +0100
 @@ -10,8 +10,9 @@
  #include "base/format_macros.h"
  #include "base/rand_util.h"
@@ -178,7 +171,7 @@
  #include "third_party/boringssl/src/include/openssl/mem.h"
  #endif
  
-@@ -57,7 +58,7 @@ absl::optional<UnguessableToken> UnguessableToken::DeserializeFromString(
+@@ -57,7 +58,7 @@ absl::optional<UnguessableToken> Unguess
  }
  
  bool operator==(const UnguessableToken& lhs, const UnguessableToken& rhs) {
@@ -187,10 +180,9 @@
    // BoringSSL is unavailable for NaCl builds so it remains timing dependent.
    return lhs.token_ == rhs.token_;
  #else
-diff --git base/win/sid.cc base/win/sid.cc
-index 0f1a2ec79aa4b..7f92778a4a776 100644
---- base/win/sid.cc
-+++ base/win/sid.cc
+diff -up base/win/sid.cc.p3~ base/win/sid.cc
+--- base/win/sid.cc.p3~	2024-02-22 22:42:43.624944200 +0100
++++ base/win/sid.cc	2024-02-23 23:22:38.449449606 +0100
 @@ -15,6 +15,7 @@
  #include <utility>
  
@@ -212,7 +204,7 @@
  
  namespace base::win {
  
-@@ -124,6 +129,7 @@ Sid Sid::FromNamedCapability(const std::wstring& capability_name) {
+@@ -124,6 +129,7 @@ Sid Sid::FromNamedCapability(const std::
    if (known_cap != known_capabilities->end()) {
      return FromKnownCapability(known_cap->second);
    }
@@ -220,7 +212,7 @@
    CRYPTO_library_init();
    static_assert((SHA256_DIGEST_LENGTH / sizeof(DWORD)) ==
                  SECURITY_APP_PACKAGE_RID_COUNT);
-@@ -136,6 +142,10 @@ Sid Sid::FromNamedCapability(const std::wstring& capability_name) {
+@@ -136,6 +142,10 @@ Sid Sid::FromNamedCapability(const std::
           reinterpret_cast<uint8_t*>(&rids[2]));
    return FromSubAuthorities(SECURITY_APP_PACKAGE_AUTHORITY, std::size(rids),
                              rids);
diff -urN chromium-122.0.6261.69/cef/patch/patches/chrome_browser_dialogs_widget.patch chromium-122.0.6261.69/cef/patch/patches/chrome_browser_dialogs_widget.patch
--- chromium-122.0.6261.69/cef/patch/patches/chrome_browser_dialogs_widget.patch	2024-02-20 19:34:39.000000000 +0100
+++ chromium-122.0.6261.69/cef/patch/patches/chrome_browser_dialogs_widget.patch	2024-02-23 23:18:32.758905955 +0100
@@ -1,8 +1,7 @@
-diff --git chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc
-index b169371e4d42f..509e4bda85b47 100644
---- chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc
-+++ chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc
-@@ -100,7 +100,7 @@ javascript_dialogs::AppModalDialogView* CreateViewsJavaScriptDialog(
+diff -up chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc.p1~ chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc
+--- chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc.p1~	2024-02-22 22:42:55.269750400 +0100
++++ chrome/browser/ui/views/chrome_javascript_app_modal_view_factory_views.cc	2024-02-23 23:14:07.412088750 +0100
+@@ -100,7 +100,7 @@ javascript_dialogs::AppModalDialogView*
    gfx::NativeWindow parent_window =
        controller->web_contents()->GetTopLevelNativeWindow();
  #if defined(USE_AURA)
@@ -11,11 +10,10 @@
      // When we are part of a WebContents that isn't actually being displayed
      // on the screen, we can't actually attach to it.
      parent_window = nullptr;
-diff --git components/constrained_window/constrained_window_views.cc components/constrained_window/constrained_window_views.cc
-index 3daf40d463e32..2d84ad7a43c96 100644
---- components/constrained_window/constrained_window_views.cc
-+++ components/constrained_window/constrained_window_views.cc
-@@ -105,15 +105,24 @@ void UpdateModalDialogPosition(views::Widget* widget,
+diff -up components/constrained_window/constrained_window_views.cc.p1~ components/constrained_window/constrained_window_views.cc
+--- components/constrained_window/constrained_window_views.cc.p1~	2024-02-22 22:43:01.134156200 +0100
++++ components/constrained_window/constrained_window_views.cc	2024-02-23 23:17:48.126438151 +0100
+@@ -105,15 +105,24 @@ void UpdateModalDialogPosition(views::Wi
    if (widget->HasCapture())
      return;
  
@@ -41,37 +39,45 @@
      return;
    }
  
-@@ -123,36 +132,22 @@ void UpdateModalDialogPosition(views::Widget* widget,
+@@ -123,44 +132,21 @@ void UpdateModalDialogPosition(views::Wi
    position.set_y(position.y() -
                   widget->non_client_view()->frame_view()->GetInsets().top());
  
 -  gfx::Rect dialog_bounds(position, size);
 -
    if (widget->is_top_level() && SupportsGlobalScreenCoordinates()) {
--    const gfx::Rect initial_dialog_bounds =
+-    gfx::Rect dialog_screen_bounds =
 -        dialog_bounds +
 -        host_widget->GetClientAreaBoundsInScreen().OffsetFromOrigin();
--    const gfx::Rect initial_host_bounds =
--        host_widget->GetWindowBoundsInScreen();
+-    const gfx::Rect host_screen_bounds = host_widget->GetWindowBoundsInScreen();
 -
 -    // TODO(crbug.com/1341530): The requested dialog bounds should never fall
 -    // outside the bounds of the transient parent.
--    DCHECK(initial_dialog_bounds.Intersects(initial_host_bounds));
+-    DCHECK(dialog_screen_bounds.Intersects(host_screen_bounds));
 -
--    // We should not show a window-modal dialog for a window that exists outside
--    // the bounds of the screen. This risks the modal window becoming
--    // effectively deadlocked as controls to dismiss the dialog may become
--    // inaccessible.
--    // It is also insufficient to reposition only the dialog but not the host
--    // window as many systems will clip child dialogs to their transient
--    // parents. Further, if the window-constrained dialog is visually
--    // disassociated with its parent window it may be difficult to discern which
--    // window the dialog is modal to.
--    host_widget->SetBoundsConstrained(initial_host_bounds);
--    const gfx::Rect adjusted_host_bounds =
--        host_widget->GetClientAreaBoundsInScreen();
--    dialog_bounds += adjusted_host_bounds.OffsetFromOrigin();
--    dialog_bounds.AdjustToFit(adjusted_host_bounds);
+-    // Adjust the dialog bound to ensure it remains visible on the display.
+-    const gfx::Rect display_work_area =
+-        display::Screen::GetScreen()
+-            ->GetDisplayNearestView(dialog_host->GetHostView())
+-            .work_area();
+-    if (!display_work_area.Contains(dialog_screen_bounds)) {
+-      dialog_screen_bounds.AdjustToFit(display_work_area);
+-    }
+-
+-    // For platforms that clip transient children to the viewport we must
+-    // maximize its bounds on the display whilst keeping it within the host
+-    // bounds to avoid viewport clipping.
+-    // In the case that the host window bounds do not have sufficient overlap
+-    // with the display, and the dialog cannot be shown in its entirety, this is
+-    // a recoverable state as users are still able to reposition the host window
+-    // back onto the display.
+-    if (PlatformClipsChildrenToViewport() &&
+-        !host_screen_bounds.Contains(dialog_screen_bounds)) {
+-      dialog_screen_bounds.AdjustToFit(host_screen_bounds);
+-    }
+-
+-    // Readjust the position of the dialog.
+-    dialog_bounds.set_origin(dialog_screen_bounds.origin());
 +    position += host_widget->GetClientAreaBoundsInScreen().OffsetFromOrigin();
 +    // If the dialog extends partially off any display, clamp its position to
 +    // be fully visible within that display. If the dialog doesn't intersect
@@ -85,13 +91,13 @@
 +      display_rect.AdjustToFit(work_area);
 +    position = display_rect.origin();
    }
- 
+-
 -  widget->SetBounds(dialog_bounds);
 +  widget->SetBounds(gfx::Rect(position, size));
  }
  
  }  // namespace
-@@ -234,7 +229,8 @@ views::Widget* CreateWebModalDialogViews(views::WidgetDelegate* dialog,
+@@ -242,7 +228,8 @@ views::Widget* CreateWebModalDialogViews
  
    views::Widget* widget = views::DialogDelegate::CreateDialogWidget(
        dialog, nullptr,
@@ -101,7 +107,7 @@
    widget->SetNativeWindowProperty(
        views::kWidgetIdentifierKey,
        const_cast<void*>(kConstrainedWindowWidgetIdentifier));
-@@ -256,8 +252,13 @@ views::Widget* CreateBrowserModalDialogViews(views::DialogDelegate* dialog,
+@@ -264,8 +251,13 @@ views::Widget* CreateBrowserModalDialogV
  
    gfx::NativeView parent_view =
        parent ? CurrentClient()->GetDialogHostView(parent) : nullptr;
@@ -116,7 +122,7 @@
    widget->SetNativeWindowProperty(
        views::kWidgetIdentifierKey,
        const_cast<void*>(kConstrainedWindowWidgetIdentifier));
-@@ -273,8 +274,7 @@ views::Widget* CreateBrowserModalDialogViews(views::DialogDelegate* dialog,
+@@ -281,8 +273,7 @@ views::Widget* CreateBrowserModalDialogV
    if (!requires_positioning)
      return widget;
  
@@ -126,11 +132,10 @@
    if (host) {
      DCHECK_EQ(parent_view, host->GetHostView());
      ModalDialogHostObserver* dialog_host_observer =
-diff --git components/constrained_window/native_web_contents_modal_dialog_manager_views.cc components/constrained_window/native_web_contents_modal_dialog_manager_views.cc
-index b986b7fa98c73..1000f529acc82 100644
---- components/constrained_window/native_web_contents_modal_dialog_manager_views.cc
-+++ components/constrained_window/native_web_contents_modal_dialog_manager_views.cc
-@@ -188,9 +188,20 @@ void NativeWebContentsModalDialogManagerViews::HostChanged(
+diff -up components/constrained_window/native_web_contents_modal_dialog_manager_views.cc.p1~ components/constrained_window/native_web_contents_modal_dialog_manager_views.cc
+--- components/constrained_window/native_web_contents_modal_dialog_manager_views.cc.p1~	2024-02-22 22:43:01.134156200 +0100
++++ components/constrained_window/native_web_contents_modal_dialog_manager_views.cc	2024-02-23 23:14:07.416088794 +0100
+@@ -188,9 +188,20 @@ void NativeWebContentsModalDialogManager
    if (host_) {
      host_->AddObserver(this);
  
@@ -154,10 +159,9 @@
      }
  
      OnPositionRequiresUpdate();
-diff --git components/web_modal/modal_dialog_host.h components/web_modal/modal_dialog_host.h
-index 51ed6bcf6b540..c6e1161140655 100644
---- components/web_modal/modal_dialog_host.h
-+++ components/web_modal/modal_dialog_host.h
+diff -up components/web_modal/modal_dialog_host.h.p1~ components/web_modal/modal_dialog_host.h
+--- components/web_modal/modal_dialog_host.h.p1~	2024-02-22 22:43:05.330446700 +0100
++++ components/web_modal/modal_dialog_host.h	2024-02-23 23:14:07.416088794 +0100
 @@ -34,6 +34,10 @@ class WEB_MODAL_EXPORT ModalDialogHost {
  
    // Returns the view against which the dialog is positioned and parented.
@@ -169,10 +173,9 @@
    // Gets the position for the dialog in coordinates relative to the host view.
    virtual gfx::Point GetDialogPosition(const gfx::Size& size) = 0;
    // Returns whether a dialog currently about to be shown should be activated.
-diff --git ui/views/window/dialog_delegate.cc ui/views/window/dialog_delegate.cc
-index ed132b017f10e..590ab9760c36a 100644
---- ui/views/window/dialog_delegate.cc
-+++ ui/views/window/dialog_delegate.cc
+diff -up ui/views/window/dialog_delegate.cc.p1~ ui/views/window/dialog_delegate.cc
+--- ui/views/window/dialog_delegate.cc.p1~	2024-02-22 22:44:13.847190100 +0100
++++ ui/views/window/dialog_delegate.cc	2024-02-23 23:14:07.416088794 +0100
 @@ -60,10 +60,12 @@ DialogDelegate::DialogDelegate() {
  // static
  Widget* DialogDelegate::CreateDialogWidget(WidgetDelegate* delegate,
@@ -188,7 +191,7 @@
    widget->Init(std::move(params));
    return widget;
  }
-@@ -72,17 +74,19 @@ Widget* DialogDelegate::CreateDialogWidget(WidgetDelegate* delegate,
+@@ -72,17 +74,19 @@ Widget* DialogDelegate::CreateDialogWidg
  Widget* DialogDelegate::CreateDialogWidget(
      std::unique_ptr<WidgetDelegate> delegate,
      gfx::NativeWindow context,
@@ -212,7 +215,7 @@
  #else
    return true;
  #endif
-@@ -93,14 +97,15 @@ Widget::InitParams DialogDelegate::GetDialogWidgetInitParams(
+@@ -93,14 +97,15 @@ Widget::InitParams DialogDelegate::GetDi
      WidgetDelegate* delegate,
      gfx::NativeWindow context,
      gfx::NativeView parent,
@@ -230,7 +233,7 @@
  
    if (!dialog || dialog->use_custom_frame()) {
      params.opacity = Widget::InitParams::WindowOpacity::kTranslucent;
-@@ -113,6 +118,7 @@ Widget::InitParams DialogDelegate::GetDialogWidgetInitParams(
+@@ -113,6 +118,7 @@ Widget::InitParams DialogDelegate::GetDi
    }
    params.context = context;
    params.parent = parent;
@@ -238,11 +241,10 @@
  #if !BUILDFLAG(IS_APPLE)
    // Web-modal (ui::MODAL_TYPE_CHILD) dialogs with parents are marked as child
    // widgets to prevent top-level window behavior (independent movement, etc).
-diff --git ui/views/window/dialog_delegate.h ui/views/window/dialog_delegate.h
-index d0bd746875ed9..1643e6d841108 100644
---- ui/views/window/dialog_delegate.h
-+++ ui/views/window/dialog_delegate.h
-@@ -96,13 +96,18 @@ class VIEWS_EXPORT DialogDelegate : public WidgetDelegate {
+diff -up ui/views/window/dialog_delegate.h.p1~ ui/views/window/dialog_delegate.h
+--- ui/views/window/dialog_delegate.h.p1~	2024-02-22 22:44:13.847190100 +0100
++++ ui/views/window/dialog_delegate.h	2024-02-23 23:14:07.416088794 +0100
+@@ -96,13 +96,18 @@ class VIEWS_EXPORT DialogDelegate : publ
    // your use case.
    static Widget* CreateDialogWidget(std::unique_ptr<WidgetDelegate> delegate,
                                      gfx::NativeWindow context,
@@ -264,7 +266,7 @@
  
    // Returns the dialog widget InitParams for a given |context| or |parent|.
    // If |bounds| is not empty, used to initially place the dialog, otherwise
-@@ -110,7 +115,9 @@ class VIEWS_EXPORT DialogDelegate : public WidgetDelegate {
+@@ -110,7 +115,9 @@ class VIEWS_EXPORT DialogDelegate : publ
    static Widget::InitParams GetDialogWidgetInitParams(WidgetDelegate* delegate,
                                                        gfx::NativeWindow context,
                                                        gfx::NativeView parent,
diff -urN chromium-122.0.6261.69/cef/patch/patches/chrome_runtime_views.patch chromium-122.0.6261.69/cef/patch/patches/chrome_runtime_views.patch
--- chromium-122.0.6261.69/cef/patch/patches/chrome_runtime_views.patch	2024-02-20 19:34:39.000000000 +0100
+++ chromium-122.0.6261.69/cef/patch/patches/chrome_runtime_views.patch	2024-02-23 23:13:28.799670230 +0100
@@ -1,8 +1,7 @@
-diff --git chrome/browser/ui/browser_command_controller.cc chrome/browser/ui/browser_command_controller.cc
-index 5664d44624283..e025126ed235f 100644
---- chrome/browser/ui/browser_command_controller.cc
-+++ chrome/browser/ui/browser_command_controller.cc
-@@ -400,6 +400,7 @@ bool BrowserCommandController::ExecuteCommandWithDisposition(
+diff -up chrome/browser/ui/browser_command_controller.cc.p0~ chrome/browser/ui/browser_command_controller.cc
+--- chrome/browser/ui/browser_command_controller.cc.p0~	2024-02-23 17:47:52.883112408 +0100
++++ chrome/browser/ui/browser_command_controller.cc	2024-02-23 23:10:35.229752367 +0100
+@@ -399,6 +399,7 @@ bool BrowserCommandController::ExecuteCo
    // choose to not implement CommandUpdaterDelegate inside this class and
    // therefore command_updater_ doesn't have the delegate set).
    if (!SupportsCommand(id) || !IsCommandEnabled(id)) {
@@ -10,7 +9,7 @@
      return false;
    }
  
-@@ -416,6 +417,13 @@ bool BrowserCommandController::ExecuteCommandWithDisposition(
+@@ -415,6 +416,13 @@ bool BrowserCommandController::ExecuteCo
    DCHECK(command_updater_.IsCommandEnabled(id))
        << "Invalid/disabled command " << id;
  
@@ -24,7 +23,7 @@
    // The order of commands in this switch statement must match the function
    // declaration order in browser.h!
    switch (id) {
-@@ -1172,11 +1180,13 @@ void BrowserCommandController::TabRestoreServiceLoaded(
+@@ -1171,11 +1179,13 @@ void BrowserCommandController::TabRestor
  // BrowserCommandController, private:
  
  bool BrowserCommandController::IsShowingMainUI() {
@@ -40,11 +39,10 @@
  }
  
  bool BrowserCommandController::IsWebAppOrCustomTab() const {
-diff --git chrome/browser/ui/toolbar/app_menu_model.cc chrome/browser/ui/toolbar/app_menu_model.cc
-index bb41ecd06518b..ab7d617e419ad 100644
---- chrome/browser/ui/toolbar/app_menu_model.cc
-+++ chrome/browser/ui/toolbar/app_menu_model.cc
-@@ -604,6 +604,57 @@ SaveAndShareSubMenuModel::SaveAndShareSubMenuModel(
+diff -up chrome/browser/ui/toolbar/app_menu_model.cc.p0~ chrome/browser/ui/toolbar/app_menu_model.cc
+--- chrome/browser/ui/toolbar/app_menu_model.cc.p0~	2024-02-23 17:47:51.871112340 +0100
++++ chrome/browser/ui/toolbar/app_menu_model.cc	2024-02-23 23:10:35.233752411 +0100
+@@ -548,6 +548,57 @@ SaveAndShareSubMenuModel::SaveAndShareSu
    }
  }
  
@@ -102,7 +100,7 @@
  }  // namespace
  
  ////////////////////////////////////////////////////////////////////////////////
-@@ -1470,7 +1521,7 @@ bool AppMenuModel::IsCommandIdChecked(int command_id) const {
+@@ -1404,7 +1455,7 @@ bool AppMenuModel::IsCommandIdChecked(in
    return false;
  }
  
@@ -111,7 +109,7 @@
    GlobalError* error =
        GlobalErrorServiceFactory::GetForProfile(browser_->profile())
            ->GetGlobalErrorByMenuItemCommandID(command_id);
-@@ -1485,6 +1536,30 @@ bool AppMenuModel::IsCommandIdEnabled(int command_id) const {
+@@ -1419,6 +1470,30 @@ bool AppMenuModel::IsCommandIdEnabled(in
    }
  }
  
@@ -142,7 +140,7 @@
  bool AppMenuModel::IsCommandIdAlerted(int command_id) const {
    if (command_id == IDC_VIEW_PASSWORDS ||
        command_id == IDC_SHOW_PASSWORD_MANAGER) {
-@@ -1652,11 +1727,15 @@ void AppMenuModel::Build() {
+@@ -1586,11 +1661,15 @@ void AppMenuModel::Build() {
                                         kDefaultIconSize));
    }
  
@@ -163,7 +161,7 @@
  
    AddItemWithStringId(IDC_PRINT, IDS_PRINT);
  
-@@ -1762,9 +1841,13 @@ void AppMenuModel::Build() {
+@@ -1696,9 +1775,13 @@ void AppMenuModel::Build() {
                           kMoreToolsMenuItem);
  
    if (!features::IsChromeRefresh2023()) {
@@ -180,7 +178,7 @@
    }
  
    if (!features::IsChromeRefresh2023()) {
-@@ -1853,6 +1936,11 @@ void AppMenuModel::Build() {
+@@ -1787,6 +1870,11 @@ void AppMenuModel::Build() {
      SetCommandIcon(this, IDC_EXIT, kExitMenuIcon);
    }
  
@@ -192,11 +190,10 @@
    uma_action_recorded_ = false;
  }
  
-diff --git chrome/browser/ui/toolbar/app_menu_model.h chrome/browser/ui/toolbar/app_menu_model.h
-index d7c9df2e12df2..5dd6080454806 100644
---- chrome/browser/ui/toolbar/app_menu_model.h
-+++ chrome/browser/ui/toolbar/app_menu_model.h
-@@ -215,6 +215,7 @@ class AppMenuModel : public ui::SimpleMenuModel,
+diff -up chrome/browser/ui/toolbar/app_menu_model.h.p0~ chrome/browser/ui/toolbar/app_menu_model.h
+--- chrome/browser/ui/toolbar/app_menu_model.h.p0~	2024-02-22 22:42:55.189744700 +0100
++++ chrome/browser/ui/toolbar/app_menu_model.h	2024-02-23 23:10:35.233752411 +0100
+@@ -215,6 +215,7 @@ class AppMenuModel : public ui::SimpleMe
    void ExecuteCommand(int command_id, int event_flags) override;
    bool IsCommandIdChecked(int command_id) const override;
    bool IsCommandIdEnabled(int command_id) const override;
@@ -204,7 +201,7 @@
    bool IsCommandIdAlerted(int command_id) const override;
    bool IsElementIdAlerted(ui::ElementIdentifier element_id) const override;
    bool GetAcceleratorForCommandId(int command_id,
-@@ -256,6 +257,8 @@ class AppMenuModel : public ui::SimpleMenuModel,
+@@ -256,6 +257,8 @@ class AppMenuModel : public ui::SimpleMe
        safety_hub::SafetyHubModuleType sh_module,
        int event_flags);
  
@@ -213,11 +210,10 @@
   private:
    // Adds actionable global error menu items to the menu.
    // Examples: Extension permissions and sign in errors.
-diff --git chrome/browser/ui/views/find_bar_host.cc chrome/browser/ui/views/find_bar_host.cc
-index 59024587ef6b7..0c30aa71768cf 100644
---- chrome/browser/ui/views/find_bar_host.cc
-+++ chrome/browser/ui/views/find_bar_host.cc
-@@ -412,6 +412,12 @@ void FindBarHost::GetWidgetBounds(gfx::Rect* bounds) {
+diff -up chrome/browser/ui/views/find_bar_host.cc.p0~ chrome/browser/ui/views/find_bar_host.cc
+--- chrome/browser/ui/views/find_bar_host.cc.p0~	2024-02-22 22:42:55.437762000 +0100
++++ chrome/browser/ui/views/find_bar_host.cc	2024-02-23 23:10:35.233752411 +0100
+@@ -412,6 +412,12 @@ void FindBarHost::GetWidgetBounds(gfx::R
    // The BrowserView does Layout for the components that we care about
    // positioning relative to, so we ask it to tell us where we should go.
    *bounds = browser_view()->GetFindBarBoundingBox();
@@ -230,11 +226,10 @@
  }
  
  void FindBarHost::RegisterAccelerators() {
-diff --git chrome/browser/ui/views/frame/browser_frame.cc chrome/browser/ui/views/frame/browser_frame.cc
-index a52bb8913d37f..dd5030f9bfb74 100644
---- chrome/browser/ui/views/frame/browser_frame.cc
-+++ chrome/browser/ui/views/frame/browser_frame.cc
-@@ -114,15 +114,23 @@ ui::ColorProviderKey::SchemeVariant GetSchemeVariant(
+diff -up chrome/browser/ui/views/frame/browser_frame.cc.p0~ chrome/browser/ui/views/frame/browser_frame.cc
+--- chrome/browser/ui/views/frame/browser_frame.cc.p0~	2024-02-23 17:47:51.903112521 +0100
++++ chrome/browser/ui/views/frame/browser_frame.cc	2024-02-23 23:13:00.539362219 +0100
+@@ -114,15 +114,23 @@ ui::ColorProviderKey::SchemeVariant GetS
  ////////////////////////////////////////////////////////////////////////////////
  // BrowserFrame, public:
  
@@ -260,7 +255,7 @@
  }
  
  BrowserFrame::~BrowserFrame() {}
-@@ -228,10 +236,20 @@ void BrowserFrame::LayoutWebAppWindowTitle(
+@@ -228,10 +236,20 @@ void BrowserFrame::LayoutWebAppWindowTit
  }
  
  int BrowserFrame::GetTopInset() const {
@@ -281,7 +276,7 @@
    browser_frame_view_->UpdateThrobber(running);
  }
  
-@@ -240,6 +258,8 @@ BrowserNonClientFrameView* BrowserFrame::GetFrameView() const {
+@@ -240,6 +258,8 @@ BrowserNonClientFrameView* BrowserFrame:
  }
  
  bool BrowserFrame::UseCustomFrame() const {
@@ -290,7 +285,7 @@
    return native_browser_frame_->UseCustomFrame();
  }
  
-@@ -253,20 +273,30 @@ bool BrowserFrame::ShouldDrawFrameHeader() const {
+@@ -253,20 +273,30 @@ bool BrowserFrame::ShouldDrawFrameHeader
  
  void BrowserFrame::GetWindowPlacement(gfx::Rect* bounds,
                                        ui::WindowShowState* show_state) const {
@@ -321,7 +316,7 @@
    browser_frame_view_->OnBrowserViewInitViewsComplete();
  }
  
-@@ -367,6 +397,8 @@ ui::ColorProviderKey::ThemeInitializerSupplier* BrowserFrame::GetCustomTheme()
+@@ -367,6 +397,8 @@ ui::ColorProviderKey::ThemeInitializerSu
  }
  
  void BrowserFrame::OnNativeWidgetWorkspaceChanged() {
@@ -330,7 +325,7 @@
    chrome::SaveWindowWorkspace(browser_view_->browser(), GetWorkspace());
    chrome::SaveWindowVisibleOnAllWorkspaces(browser_view_->browser(),
                                             IsVisibleOnAllWorkspaces());
-@@ -483,6 +515,8 @@ void BrowserFrame::OnNativeThemeUpdated(ui::NativeTheme* observed_theme) {
+@@ -483,6 +515,8 @@ void BrowserFrame::OnNativeThemeUpdated(
  
  ui::ColorProviderKey BrowserFrame::GetColorProviderKey() const {
    auto key = Widget::GetColorProviderKey();
@@ -339,19 +334,19 @@
  
    key.app_controller = browser_view_->browser()->app_controller();
  
-@@ -637,5 +671,8 @@ bool BrowserFrame::RegenerateFrameOnThemeChange(
+@@ -637,6 +671,9 @@ bool BrowserFrame::RegenerateFrameOnThem
  }
  
  bool BrowserFrame::IsIncognitoBrowser() const {
 +  if (!browser_view_) {
 +    return true;
 +  }
+   if (base::CommandLine::ForCurrentProcess()->HasSwitch("enable-incognito-themes"))
+     return false;
    return browser_view_->browser()->profile()->IsIncognitoProfile();
- }
-diff --git chrome/browser/ui/views/frame/browser_frame.h chrome/browser/ui/views/frame/browser_frame.h
-index 2e973c9e279b0..12b62efb8071f 100644
---- chrome/browser/ui/views/frame/browser_frame.h
-+++ chrome/browser/ui/views/frame/browser_frame.h
+diff -up chrome/browser/ui/views/frame/browser_frame.h.p0~ chrome/browser/ui/views/frame/browser_frame.h
+--- chrome/browser/ui/views/frame/browser_frame.h.p0~	2024-02-22 22:42:55.449762800 +0100
++++ chrome/browser/ui/views/frame/browser_frame.h	2024-02-23 23:10:35.233752411 +0100
 @@ -58,7 +58,9 @@ enum class TabDragKind {
  // This is a virtual interface that allows system specific browser frames.
  class BrowserFrame : public views::Widget, public views::ContextMenuController {
@@ -362,10 +357,9 @@
  
    BrowserFrame(const BrowserFrame&) = delete;
    BrowserFrame& operator=(const BrowserFrame&) = delete;
-diff --git chrome/browser/ui/views/frame/browser_view.cc chrome/browser/ui/views/frame/browser_view.cc
-index a3090da2ca8b4..463a07929734e 100644
---- chrome/browser/ui/views/frame/browser_view.cc
-+++ chrome/browser/ui/views/frame/browser_view.cc
+diff -up chrome/browser/ui/views/frame/browser_view.cc.p0~ chrome/browser/ui/views/frame/browser_view.cc
+--- chrome/browser/ui/views/frame/browser_view.cc.p0~	2024-02-23 17:47:51.903112521 +0100
++++ chrome/browser/ui/views/frame/browser_view.cc	2024-02-23 23:10:35.233752411 +0100
 @@ -346,11 +346,10 @@ using content::NativeWebKeyboardEvent;
  using content::WebContents;
  using web_modal::WebContentsModalDialogHost;
@@ -381,7 +375,7 @@
  
  #if BUILDFLAG(IS_CHROMEOS_ASH)
  // UMA histograms that record animation smoothness for tab loading animation.
-@@ -677,6 +676,14 @@ class BrowserViewLayoutDelegateImpl : public BrowserViewLayoutDelegate {
+@@ -677,6 +676,14 @@ class BrowserViewLayoutDelegateImpl : pu
      return browser_view_->frame()->GetTopInset() - browser_view_->y();
    }
  
@@ -396,7 +390,7 @@
    bool IsToolbarVisible() const override {
      return browser_view_->IsToolbarVisible();
    }
-@@ -835,11 +842,21 @@ class BrowserView::AccessibilityModeObserver : public ui::AXModeObserver {
+@@ -835,11 +842,21 @@ class BrowserView::AccessibilityModeObse
  ///////////////////////////////////////////////////////////////////////////////
  // BrowserView, public:
  
@@ -419,7 +413,7 @@
    // Store the actions so that the access is available for other classes.
    if (features::IsSidePanelPinningEnabled()) {
      browser_->SetUserData(BrowserActions::UserDataKey(),
-@@ -933,8 +950,15 @@ BrowserView::BrowserView(std::unique_ptr<Browser> browser)
+@@ -933,8 +950,15 @@ BrowserView::BrowserView(std::unique_ptr
    contents_container->SetLayoutManager(std::make_unique<ContentsLayoutManager>(
        devtools_web_view_, contents_web_view_));
  
@@ -472,7 +466,7 @@
  }
  
  // static
-@@ -1966,9 +1996,14 @@ void BrowserView::OnExclusiveAccessUserInput() {
+@@ -1970,9 +2000,14 @@ void BrowserView::OnExclusiveAccessUserI
  
  bool BrowserView::ShouldHideUIForFullscreen() const {
    // Immersive mode needs UI for the slide-down top panel.
@@ -488,7 +482,7 @@
    return frame_->GetFrameView()->ShouldHideTopUIForFullscreen();
  }
  
-@@ -3086,7 +3121,8 @@ DownloadShelf* BrowserView::GetDownloadShelf() {
+@@ -3090,7 +3125,8 @@ DownloadShelf* BrowserView::GetDownloadS
  }
  
  DownloadBubbleUIController* BrowserView::GetDownloadBubbleUIController() {
@@ -498,7 +492,7 @@
    if (auto* download_button = toolbar_button_provider_->GetDownloadButton())
      return download_button->bubble_controller();
    return nullptr;
-@@ -3645,7 +3681,8 @@ void BrowserView::ReparentTopContainerForEndOfImmersive() {
+@@ -3649,7 +3685,8 @@ void BrowserView::ReparentTopContainerFo
    if (top_container()->parent() == this)
      return;
  
@@ -508,7 +502,7 @@
    top_container()->DestroyLayer();
    AddChildViewAt(top_container(), 0);
    EnsureFocusOrder();
-@@ -4126,11 +4163,38 @@ void BrowserView::GetAccessiblePanes(std::vector<views::View*>* panes) {
+@@ -4130,11 +4167,38 @@ void BrowserView::GetAccessiblePanes(std
  bool BrowserView::ShouldDescendIntoChildForEventHandling(
      gfx::NativeView child,
      const gfx::Point& location) {
@@ -549,7 +543,7 @@
      // Draggable regions are defined relative to the web contents.
      gfx::Point point_in_contents_web_view_coords(location);
      views::View::ConvertPointToTarget(GetWidget()->GetRootView(),
-@@ -4139,7 +4203,7 @@ bool BrowserView::ShouldDescendIntoChildForEventHandling(
+@@ -4143,7 +4207,7 @@ bool BrowserView::ShouldDescendIntoChild
  
      // Draggable regions should be ignored for clicks into any browser view's
      // owned widgets, for example alerts, permission prompts or find bar.
@@ -558,7 +552,7 @@
                 point_in_contents_web_view_coords.x(),
                 point_in_contents_web_view_coords.y()) ||
             WidgetOwnedByAnchorContainsPoint(point_in_contents_web_view_coords);
-@@ -4250,8 +4314,10 @@ void BrowserView::Layout() {
+@@ -4254,8 +4318,10 @@ void BrowserView::Layout() {
  
    // TODO(jamescook): Why was this in the middle of layout code?
    toolbar_->location_bar()->omnibox_view()->SetFocusBehavior(
@@ -571,7 +565,7 @@
  
    // Some of the situations when the BrowserView is laid out are:
    // - Enter/exit immersive fullscreen mode.
-@@ -4317,6 +4383,11 @@ void BrowserView::AddedToWidget() {
+@@ -4321,6 +4387,11 @@ void BrowserView::AddedToWidget() {
    SetThemeProfileForWindow(GetNativeWindow(), browser_->profile());
  #endif
  
@@ -583,7 +577,7 @@
    toolbar_->Init();
  
    // TODO(pbos): Investigate whether the side panels should be creatable when
-@@ -4365,13 +4436,9 @@ void BrowserView::AddedToWidget() {
+@@ -4369,13 +4440,9 @@ void BrowserView::AddedToWidget() {
  
    EnsureFocusOrder();
  
@@ -599,7 +593,7 @@
    using_native_frame_ = frame_->ShouldUseNativeFrame();
  
    MaybeInitializeWebUITabStrip();
-@@ -4796,7 +4863,8 @@ void BrowserView::ProcessFullscreen(bool fullscreen,
+@@ -4800,7 +4867,8 @@ void BrowserView::ProcessFullscreen(bool
    // Undo our anti-jankiness hacks and force a re-layout.
    in_process_fullscreen_ = false;
    ToolbarSizeChanged(false);
@@ -609,7 +603,7 @@
  }
  
  bool BrowserView::ShouldUseImmersiveFullscreenForUrl(const GURL& url) const {
-@@ -5194,6 +5262,8 @@ Profile* BrowserView::GetProfile() {
+@@ -5198,6 +5266,8 @@ Profile* BrowserView::GetProfile() {
  }
  
  void BrowserView::UpdateUIForTabFullscreen() {
@@ -618,7 +612,7 @@
    frame()->GetFrameView()->UpdateFullscreenTopUI();
  }
  
-@@ -5216,6 +5286,8 @@ void BrowserView::HideDownloadShelf() {
+@@ -5220,6 +5290,8 @@ void BrowserView::HideDownloadShelf() {
  }
  
  bool BrowserView::CanUserExitFullscreen() const {
@@ -627,11 +621,10 @@
    return frame_->GetFrameView()->CanUserExitFullscreen();
  }
  
-diff --git chrome/browser/ui/views/frame/browser_view.h chrome/browser/ui/views/frame/browser_view.h
-index f3f5944785e5e..ec369e0fb2fe1 100644
---- chrome/browser/ui/views/frame/browser_view.h
-+++ chrome/browser/ui/views/frame/browser_view.h
-@@ -127,11 +127,16 @@ class BrowserView : public BrowserWindow,
+diff -up chrome/browser/ui/views/frame/browser_view.h.p0~ chrome/browser/ui/views/frame/browser_view.h
+--- chrome/browser/ui/views/frame/browser_view.h.p0~	2024-02-22 22:42:56.461763600 +0100
++++ chrome/browser/ui/views/frame/browser_view.h	2024-02-23 23:10:35.233752411 +0100
+@@ -127,11 +127,16 @@ class BrowserView : public BrowserWindow
    METADATA_HEADER(BrowserView, views::ClientView)
  
   public:
@@ -648,7 +641,7 @@
    void set_frame(BrowserFrame* frame) {
      frame_ = frame;
      paint_as_active_subscription_ =
-@@ -839,6 +844,9 @@ class BrowserView : public BrowserWindow,
+@@ -839,6 +844,9 @@ class BrowserView : public BrowserWindow
        const gfx::Rect& contents_webview_bounds,
        const gfx::Rect& local_webview_container_bounds);
  
@@ -658,10 +651,9 @@
   private:
    // Do not friend BrowserViewLayout. Use the BrowserViewLayoutDelegate
    // interface to keep these two classes decoupled and testable.
-diff --git chrome/browser/ui/views/frame/browser_view_layout.cc chrome/browser/ui/views/frame/browser_view_layout.cc
-index 0991a57cccfe8..3ed3d43497460 100644
---- chrome/browser/ui/views/frame/browser_view_layout.cc
-+++ chrome/browser/ui/views/frame/browser_view_layout.cc
+diff -up chrome/browser/ui/views/frame/browser_view_layout.cc.p0~ chrome/browser/ui/views/frame/browser_view_layout.cc
+--- chrome/browser/ui/views/frame/browser_view_layout.cc.p0~	2024-02-22 22:42:55.461763600 +0100
++++ chrome/browser/ui/views/frame/browser_view_layout.cc	2024-02-23 23:10:35.237752456 +0100
 @@ -48,6 +48,10 @@
  #include "ui/views/window/client_view.h"
  #include "ui/views/window/hit_test_utils.h"
@@ -673,7 +665,7 @@
  using views::View;
  using web_modal::ModalDialogHostObserver;
  using web_modal::WebContentsModalDialogHost;
-@@ -92,6 +96,10 @@ class BrowserViewLayout::WebContentsModalDialogHostViews
+@@ -92,6 +96,10 @@ class BrowserViewLayout::WebContentsModa
        observer.OnHostDestroying();
    }
  
@@ -684,7 +676,7 @@
    void NotifyPositionRequiresUpdate() {
      for (ModalDialogHostObserver& observer : observer_list_)
        observer.OnPositionRequiresUpdate();
-@@ -102,7 +110,7 @@ class BrowserViewLayout::WebContentsModalDialogHostViews
+@@ -102,7 +110,7 @@ class BrowserViewLayout::WebContentsModa
      views::View* view = browser_view_layout_->contents_container_;
      gfx::Rect rect = view->ConvertRectToWidget(view->GetLocalBounds());
      const int middle_x = rect.x() + rect.width() / 2;
@@ -693,7 +685,7 @@
      return gfx::Point(middle_x - size.width() / 2, top);
    }
  
-@@ -117,7 +125,7 @@ class BrowserViewLayout::WebContentsModalDialogHostViews
+@@ -117,7 +125,7 @@ class BrowserViewLayout::WebContentsModa
    gfx::Size GetMaximumDialogSize() override {
      views::View* view = browser_view_layout_->contents_container_;
      gfx::Rect content_area = view->ConvertRectToWidget(view->GetLocalBounds());
@@ -702,7 +694,7 @@
      return gfx::Size(content_area.width(), content_area.bottom() - top);
    }
  
-@@ -131,6 +139,13 @@ class BrowserViewLayout::WebContentsModalDialogHostViews
+@@ -131,6 +139,13 @@ class BrowserViewLayout::WebContentsModa
      return GetHostWidget()->GetNativeView();
    }
  
@@ -716,7 +708,7 @@
    // Add/remove observer.
    void AddObserver(ModalDialogHostObserver* observer) override {
      observer_list_.AddObserver(observer);
-@@ -441,6 +456,8 @@ void BrowserViewLayout::Layout(views::View* browser_view) {
+@@ -441,6 +456,8 @@ void BrowserViewLayout::Layout(views::Vi
    if (exclusive_access_bubble)
      exclusive_access_bubble->RepositionIfVisible();
  
@@ -725,7 +717,7 @@
    // Adjust any hosted dialogs if the browser's dialog hosting bounds changed.
    const gfx::Rect dialog_bounds(dialog_host_->GetDialogPosition(gfx::Size()),
                                  dialog_host_->GetMaximumDialogSize());
-@@ -454,6 +471,7 @@ void BrowserViewLayout::Layout(views::View* browser_view) {
+@@ -454,6 +471,7 @@ void BrowserViewLayout::Layout(views::Vi
      latest_dialog_bounds_in_screen_ = dialog_bounds_in_screen;
      dialog_host_->NotifyPositionRequiresUpdate();
    }
@@ -733,7 +725,7 @@
  }
  
  // Return the preferred size which is the size required to give each
-@@ -583,6 +601,13 @@ int BrowserViewLayout::LayoutWebUITabStrip(int top) {
+@@ -583,6 +601,13 @@ int BrowserViewLayout::LayoutWebUITabStr
  
  int BrowserViewLayout::LayoutToolbar(int top) {
    TRACE_EVENT0("ui", "BrowserViewLayout::LayoutToolbar");
@@ -747,10 +739,9 @@
    int browser_view_width = vertical_layout_rect_.width();
    bool toolbar_visible = delegate_->IsToolbarVisible();
    int height = toolbar_visible ? toolbar_->GetPreferredSize().height() : 0;
-diff --git chrome/browser/ui/views/frame/browser_view_layout_delegate.h chrome/browser/ui/views/frame/browser_view_layout_delegate.h
-index 29ad5517bd3c9..b0fe093467abc 100644
---- chrome/browser/ui/views/frame/browser_view_layout_delegate.h
-+++ chrome/browser/ui/views/frame/browser_view_layout_delegate.h
+diff -up chrome/browser/ui/views/frame/browser_view_layout_delegate.h.p0~ chrome/browser/ui/views/frame/browser_view_layout_delegate.h
+--- chrome/browser/ui/views/frame/browser_view_layout_delegate.h.p0~	2024-02-22 22:42:55.461763600 +0100
++++ chrome/browser/ui/views/frame/browser_view_layout_delegate.h	2024-02-23 23:10:35.237752456 +0100
 @@ -28,6 +28,7 @@ class BrowserViewLayoutDelegate {
        const gfx::Rect& available_space,
        views::Label& window_title_label) const = 0;
@@ -759,11 +750,10 @@
    virtual bool IsToolbarVisible() const = 0;
    virtual bool IsBookmarkBarVisible() const = 0;
    virtual bool IsContentsSeparatorEnabled() const = 0;
-diff --git chrome/browser/ui/views/frame/contents_web_view.cc chrome/browser/ui/views/frame/contents_web_view.cc
-index 71445bfab1824..c77750ea2a820 100644
---- chrome/browser/ui/views/frame/contents_web_view.cc
-+++ chrome/browser/ui/views/frame/contents_web_view.cc
-@@ -28,6 +28,12 @@ ContentsWebView::ContentsWebView(content::BrowserContext* browser_context)
+diff -up chrome/browser/ui/views/frame/contents_web_view.cc.p0~ chrome/browser/ui/views/frame/contents_web_view.cc
+--- chrome/browser/ui/views/frame/contents_web_view.cc.p0~	2024-02-22 22:42:55.461763600 +0100
++++ chrome/browser/ui/views/frame/contents_web_view.cc	2024-02-23 23:10:35.237752456 +0100
+@@ -28,6 +28,12 @@ ContentsWebView::ContentsWebView(content
      : views::WebView(browser_context),
        status_bubble_(nullptr) {
    SetProperty(views::kElementIdentifierKey, kContentsWebViewElementId);
@@ -776,11 +766,10 @@
  }
  
  ContentsWebView::~ContentsWebView() {
-diff --git chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc
-index 8f8eae2b243b3..288d584c61548 100644
---- chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc
-+++ chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc
-@@ -590,6 +590,11 @@ PictureInPictureBrowserFrameView::PictureInPictureBrowserFrameView(
+diff -up chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc.p0~ chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc
+--- chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc.p0~	2024-02-22 22:42:55.473764400 +0100
++++ chrome/browser/ui/views/frame/picture_in_picture_browser_frame_view.cc	2024-02-23 23:10:35.237752456 +0100
+@@ -590,6 +590,11 @@ PictureInPictureBrowserFrameView::Pictur
    frame->GetNativeWindow()->SetEventTargeter(
        std::make_unique<chromeos::InteriorResizeHandleTargeter>());
  #endif
@@ -792,7 +781,7 @@
  }
  
  PictureInPictureBrowserFrameView::~PictureInPictureBrowserFrameView() {
-@@ -686,18 +691,42 @@ gfx::Rect PictureInPictureBrowserFrameView::GetWindowBoundsForClientBounds(
+@@ -686,18 +691,42 @@ gfx::Rect PictureInPictureBrowserFrameVi
  
  int PictureInPictureBrowserFrameView::NonClientHitTest(
      const gfx::Point& point) {
@@ -843,7 +832,7 @@
  
    // Allow dragging and resizing the window.
    int window_component = GetHTComponentForFrame(
-@@ -764,7 +793,8 @@ void PictureInPictureBrowserFrameView::Layout() {
+@@ -764,7 +793,8 @@ void PictureInPictureBrowserFrameView::L
    gfx::Rect content_area = GetLocalBounds();
    content_area.Inset(FrameBorderInsets());
    gfx::Rect top_bar = content_area;
@@ -853,7 +842,7 @@
    top_bar_container_view_->SetBoundsRect(top_bar);
  #if !BUILDFLAG(IS_ANDROID)
    if (auto_pip_setting_overlay_) {
-@@ -1236,7 +1266,8 @@ gfx::Insets PictureInPictureBrowserFrameView::ResizeBorderInsets() const {
+@@ -1236,7 +1266,8 @@ gfx::Insets PictureInPictureBrowserFrame
  }
  
  int PictureInPictureBrowserFrameView::GetTopAreaHeight() const {
@@ -863,11 +852,10 @@
  }
  
  gfx::Size PictureInPictureBrowserFrameView::GetNonClientViewAreaSize() const {
-diff --git chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc
-index b862ceac7225d..9575440a77d67 100644
---- chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc
-+++ chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc
-@@ -27,7 +27,8 @@ OmniboxPopupCloser::OmniboxPopupCloser(BrowserView* browser_view)
+diff -up chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc.p0~ chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc
+--- chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc.p0~	2024-02-22 22:42:55.505766600 +0100
++++ chrome/browser/ui/views/omnibox/omnibox_popup_closer.cc	2024-02-23 23:10:35.237752456 +0100
+@@ -27,7 +27,8 @@ OmniboxPopupCloser::OmniboxPopupCloser(B
  OmniboxPopupCloser::~OmniboxPopupCloser() = default;
  
  void OmniboxPopupCloser::OnMouseEvent(ui::MouseEvent* event) {
@@ -877,11 +865,10 @@
        event->type() == ui::ET_MOUSE_PRESSED) {
      LocationBarView* location_bar_view = browser_view_->GetLocationBarView();
      CHECK(location_bar_view);
-diff --git chrome/browser/ui/views/page_action/page_action_icon_controller.cc chrome/browser/ui/views/page_action/page_action_icon_controller.cc
-index b6e4a01ae450d..14b7fd84ed7df 100644
---- chrome/browser/ui/views/page_action/page_action_icon_controller.cc
-+++ chrome/browser/ui/views/page_action/page_action_icon_controller.cc
-@@ -98,6 +98,12 @@ void PageActionIconController::Init(const PageActionIconParams& params,
+diff -up chrome/browser/ui/views/page_action/page_action_icon_controller.cc.p0~ chrome/browser/ui/views/page_action/page_action_icon_controller.cc
+--- chrome/browser/ui/views/page_action/page_action_icon_controller.cc.p0~	2024-02-22 22:42:55.513767200 +0100
++++ chrome/browser/ui/views/page_action/page_action_icon_controller.cc	2024-02-23 23:10:35.237752456 +0100
+@@ -98,6 +98,12 @@ void PageActionIconController::Init(cons
    };
  
    for (PageActionIconType type : params.types_enabled) {
@@ -894,11 +881,10 @@
      switch (type) {
        case PageActionIconType::kPaymentsOfferNotification:
          add_page_action_icon(
-diff --git chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
-index c592f23b0c972..adca2e8db1cc6 100644
---- chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
-+++ chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
-@@ -558,29 +558,41 @@ gfx::Range BrowserTabStripController::ListTabsInGroup(
+diff -up chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc.p0~ chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc
+--- chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc.p0~	2024-02-22 22:42:55.621774700 +0100
++++ chrome/browser/ui/views/tabs/browser_tab_strip_controller.cc	2024-02-23 23:10:35.237752456 +0100
+@@ -558,29 +558,41 @@ gfx::Range BrowserTabStripController::Li
  }
  
  bool BrowserTabStripController::IsFrameCondensed() const {
@@ -940,11 +926,10 @@
    return GetFrameView()->GetCustomBackgroundId(active_state);
  }
  
-diff --git chrome/browser/ui/views/toolbar/toolbar_view.cc chrome/browser/ui/views/toolbar/toolbar_view.cc
-index e6aca6cbb09e8..7e16d8b75fd39 100644
---- chrome/browser/ui/views/toolbar/toolbar_view.cc
-+++ chrome/browser/ui/views/toolbar/toolbar_view.cc
-@@ -192,7 +192,7 @@ class TabstripLikeBackground : public views::Background {
+diff -up chrome/browser/ui/views/toolbar/toolbar_view.cc.p0~ chrome/browser/ui/views/toolbar/toolbar_view.cc
+--- chrome/browser/ui/views/toolbar/toolbar_view.cc.p0~	2024-02-23 17:47:51.899112499 +0100
++++ chrome/browser/ui/views/toolbar/toolbar_view.cc	2024-02-23 23:11:52.174610612 +0100
+@@ -192,7 +192,7 @@ class TabstripLikeBackground : public vi
    void Paint(gfx::Canvas* canvas, views::View* view) const override {
      bool painted = TopContainerBackground::PaintThemeCustomImage(canvas, view,
                                                                   browser_view_);
@@ -1026,20 +1011,19 @@
      send_tab_to_self_button =
          std::make_unique<send_tab_to_self::SendTabToSelfToolbarIconView>(
              browser_view_);
-@@ -452,7 +469,7 @@ void ToolbarView::Init() {
-     send_tab_to_self_button_ =
-         container_view_->AddChildView(std::move(send_tab_to_self_button));
- 
--  if (!features::IsSidePanelPinningEnabled()) {
-+  if (!features::IsSidePanelPinningEnabled() && BUTTON_VISIBLE(kSidePanel)) {
-     if (companion::IsCompanionFeatureEnabled()) {
-       side_panel_container_ = container_view_->AddChildView(
-           std::make_unique<SidePanelToolbarContainer>(browser_view_));
-diff --git chrome/browser/ui/views/toolbar/toolbar_view.h chrome/browser/ui/views/toolbar/toolbar_view.h
-index ec3e34a86f4c5..c10866a7b1ace 100644
---- chrome/browser/ui/views/toolbar/toolbar_view.h
-+++ chrome/browser/ui/views/toolbar/toolbar_view.h
-@@ -93,7 +93,8 @@ class ToolbarView : public views::AccessiblePaneView,
+@@ -403,7 +420,7 @@ void ToolbarView::Init() {
+                   GetLayoutConstant(TOOLBAR_DIVIDER_HEIGHT)));
+   }
+ 
+-  if (features::IsSidePanelPinningEnabled()) {
++  if (features::IsSidePanelPinningEnabled() && BUTTON_VISIBLE(kSidePanel)) {
+     pinned_toolbar_actions_container_ = container_view_->AddChildView(
+         std::make_unique<PinnedToolbarActionsContainer>(browser_view_));
+   }
+diff -up chrome/browser/ui/views/toolbar/toolbar_view.h.p0~ chrome/browser/ui/views/toolbar/toolbar_view.h
+--- chrome/browser/ui/views/toolbar/toolbar_view.h.p0~	2024-02-22 22:42:55.737782700 +0100
++++ chrome/browser/ui/views/toolbar/toolbar_view.h	2024-02-23 23:10:35.237752456 +0100
+@@ -93,7 +93,8 @@ class ToolbarView : public views::Access
                  // needs to be displayed.
    };
  
@@ -1049,10 +1033,9 @@
    ToolbarView(const ToolbarView&) = delete;
    ToolbarView& operator=(const ToolbarView&) = delete;
    ~ToolbarView() override;
-diff --git chrome/browser/ui/web_applications/draggable_region_host_impl.cc chrome/browser/ui/web_applications/draggable_region_host_impl.cc
-index 8980b03f2c945..6e719e0abced7 100644
---- chrome/browser/ui/web_applications/draggable_region_host_impl.cc
-+++ chrome/browser/ui/web_applications/draggable_region_host_impl.cc
+diff -up chrome/browser/ui/web_applications/draggable_region_host_impl.cc.p0~ chrome/browser/ui/web_applications/draggable_region_host_impl.cc
+--- chrome/browser/ui/web_applications/draggable_region_host_impl.cc.p0~	2024-02-22 22:42:55.769785000 +0100
++++ chrome/browser/ui/web_applications/draggable_region_host_impl.cc	2024-02-23 23:10:35.241752502 +0100
 @@ -11,6 +11,24 @@
  #include "chrome/common/chrome_features.h"
  #include "mojo/public/cpp/bindings/self_owned_receiver.h"
@@ -1078,7 +1061,7 @@
  DraggableRegionsHostImpl::DraggableRegionsHostImpl(
      content::RenderFrameHost& render_frame_host,
      mojo::PendingReceiver<chrome::mojom::DraggableRegions> receiver)
-@@ -28,7 +46,7 @@ void DraggableRegionsHostImpl::CreateIfAllowed(
+@@ -28,7 +46,7 @@ void DraggableRegionsHostImpl::CreateIfA
    auto* browser = chrome::FindBrowserWithTab(web_contents);
  
    // We only want to bind the receiver for PWAs.
@@ -1087,7 +1070,7 @@
      return;
  
    // The object is bound to the lifetime of |render_frame_host| and the mojo
-@@ -43,7 +61,7 @@ void DraggableRegionsHostImpl::UpdateDraggableRegions(
+@@ -43,7 +61,7 @@ void DraggableRegionsHostImpl::UpdateDra
    auto* browser = chrome::FindBrowserWithTab(web_contents);
    // When a WebApp browser's WebContents is reparented to a tabbed browser, a
    // draggable regions update may race with the reparenting logic.
@@ -1096,7 +1079,7 @@
      return;
  
    SkRegion sk_region;
-@@ -56,5 +74,12 @@ void DraggableRegionsHostImpl::UpdateDraggableRegions(
+@@ -56,5 +74,12 @@ void DraggableRegionsHostImpl::UpdateDra
    }
  
    auto* app_browser_controller = browser->app_controller();
diff -urN chromium-122.0.6261.69/cef/patch/patches/content_2015.patch chromium-122.0.6261.69/cef/patch/patches/content_2015.patch
--- chromium-122.0.6261.69/cef/patch/patches/content_2015.patch	2024-02-20 19:34:39.000000000 +0100
+++ chromium-122.0.6261.69/cef/patch/patches/content_2015.patch	2024-02-23 23:21:49.988951488 +0100
@@ -1,7 +1,6 @@
-diff --git content/browser/devtools/devtools_http_handler.cc content/browser/devtools/devtools_http_handler.cc
-index b7430b7d7027f..721144dde86d8 100644
---- content/browser/devtools/devtools_http_handler.cc
-+++ content/browser/devtools/devtools_http_handler.cc
+diff -up content/browser/devtools/devtools_http_handler.cc.p2~ content/browser/devtools/devtools_http_handler.cc
+--- content/browser/devtools/devtools_http_handler.cc.p2~	2024-02-22 22:43:06.778478000 +0100
++++ content/browser/devtools/devtools_http_handler.cc	2024-02-23 23:20:51.080343810 +0100
 @@ -589,7 +589,7 @@ void DevToolsHttpHandler::OnJsonRequest(
      base::Value::Dict version;
      version.Set("Protocol-Version", DevToolsAgentHost::GetProtocolVersion());
@@ -11,11 +10,10 @@
      version.Set("User-Agent", GetContentClient()->browser()->GetUserAgent());
      version.Set("V8-Version", V8_VERSION_STRING);
      std::string host = info.GetHeaderValue("host");
-diff --git content/browser/loader/navigation_url_loader_impl.cc content/browser/loader/navigation_url_loader_impl.cc
-index 5da07b9eff248..72fc63ba456c5 100644
---- content/browser/loader/navigation_url_loader_impl.cc
-+++ content/browser/loader/navigation_url_loader_impl.cc
-@@ -751,6 +751,22 @@ NavigationURLLoaderImpl::PrepareForNonInterceptedRequest() {
+diff -up content/browser/loader/navigation_url_loader_impl.cc.p2~ content/browser/loader/navigation_url_loader_impl.cc
+--- content/browser/loader/navigation_url_loader_impl.cc.p2~	2024-02-22 22:43:05.954490000 +0100
++++ content/browser/loader/navigation_url_loader_impl.cc	2024-02-23 23:20:51.080343810 +0100
+@@ -757,6 +757,22 @@ NavigationURLLoaderImpl::PrepareForNonIn
                : nullptr,
            &loader_factory);
  
@@ -38,11 +36,10 @@
        if (loader_factory) {
          factory = base::MakeRefCounted<network::WrapperSharedURLLoaderFactory>(
              std::move(loader_factory));
-diff --git content/public/browser/content_browser_client.cc content/public/browser/content_browser_client.cc
-index d004abc6fe3da..3aeb9ab07d2a6 100644
---- content/public/browser/content_browser_client.cc
-+++ content/public/browser/content_browser_client.cc
-@@ -1070,7 +1070,7 @@ ContentBrowserClient::CreateURLLoaderHandlerForServiceWorkerNavigationPreload(
+diff -up content/public/browser/content_browser_client.cc.p2~ content/public/browser/content_browser_client.cc
+--- content/public/browser/content_browser_client.cc.p2~	2024-02-22 22:43:06.598534600 +0100
++++ content/public/browser/content_browser_client.cc	2024-02-23 23:20:51.084343853 +0100
+@@ -1070,7 +1070,7 @@ ContentBrowserClient::CreateURLLoaderHan
  void ContentBrowserClient::OnNetworkServiceCreated(
      network::mojom::NetworkService* network_service) {}
  
@@ -51,7 +48,7 @@
      BrowserContext* context,
      bool in_memory,
      const base::FilePath& relative_partition_path,
-@@ -1079,6 +1079,7 @@ void ContentBrowserClient::ConfigureNetworkContextParams(
+@@ -1079,6 +1079,7 @@ void ContentBrowserClient::ConfigureNetw
          cert_verifier_creation_params) {
    network_context_params->user_agent = GetUserAgentBasedOnPolicy(context);
    network_context_params->accept_language = "en-us,en";
@@ -59,10 +56,9 @@
  }
  
  std::vector<base::FilePath>
-diff --git content/public/browser/content_browser_client.h content/public/browser/content_browser_client.h
-index d0a5dbc454670..0814479cf64e1 100644
---- content/public/browser/content_browser_client.h
-+++ content/public/browser/content_browser_client.h
+diff -up content/public/browser/content_browser_client.h.p2~ content/public/browser/content_browser_client.h
+--- content/public/browser/content_browser_client.h.p2~	2024-02-22 22:43:07.602534800 +0100
++++ content/public/browser/content_browser_client.h	2024-02-23 23:20:51.084343853 +0100
 @@ -43,6 +43,7 @@
  #include "content/public/browser/mojo_binder_policy_map.h"
  #include "content/public/browser/privacy_sandbox_invoking_api.h"
@@ -71,7 +67,7 @@
  #include "content/public/common/alternative_error_page_override_info.mojom-forward.h"
  #include "content/public/common/page_visibility_state.h"
  #include "content/public/common/window_container_type.mojom-forward.h"
-@@ -1989,7 +1990,7 @@ class CONTENT_EXPORT ContentBrowserClient {
+@@ -1989,7 +1990,7 @@ class CONTENT_EXPORT ContentBrowserClien
    //
    // If |relative_partition_path| is the empty string, it means this needs to
    // create the default NetworkContext for the BrowserContext.
@@ -80,7 +76,7 @@
        BrowserContext* context,
        bool in_memory,
        const base::FilePath& relative_partition_path,
-@@ -2210,6 +2211,19 @@ class CONTENT_EXPORT ContentBrowserClient {
+@@ -2210,6 +2211,19 @@ class CONTENT_EXPORT ContentBrowserClien
        RenderFrameHost* initiator_document,
        mojo::PendingRemote<network::mojom::URLLoaderFactory>* out_factory);
  
@@ -100,7 +96,7 @@
    // Creates an OverlayWindow to be used for video or Picture-in-Picture.
    // This window will house the content shown when in Picture-in-Picture mode.
    // This will return a new OverlayWindow.
-@@ -2267,6 +2281,10 @@ class CONTENT_EXPORT ContentBrowserClient {
+@@ -2267,6 +2281,10 @@ class CONTENT_EXPORT ContentBrowserClien
    // Used as part of the user agent string.
    virtual std::string GetProduct();
  
@@ -111,11 +107,10 @@
    // Returns the user agent. This can also return the reduced user agent, based
    // on blink::features::kUserAgentReduction. Content may cache this value.
    virtual std::string GetUserAgent();
-diff --git content/public/renderer/content_renderer_client.h content/public/renderer/content_renderer_client.h
-index ff20508d76a60..03a83b28fd678 100644
---- content/public/renderer/content_renderer_client.h
-+++ content/public/renderer/content_renderer_client.h
-@@ -101,6 +101,9 @@ class CONTENT_EXPORT ContentRendererClient {
+diff -up content/public/renderer/content_renderer_client.h.p2~ content/public/renderer/content_renderer_client.h
+--- content/public/renderer/content_renderer_client.h.p2~	2024-02-22 22:43:06.662539000 +0100
++++ content/public/renderer/content_renderer_client.h	2024-02-23 23:20:51.084343853 +0100
+@@ -101,6 +101,9 @@ class CONTENT_EXPORT ContentRendererClie
    // binding requests from RenderProcessHost::BindReceiver().
    virtual void ExposeInterfacesToBrowser(mojo::BinderMap* binders) {}
  
@@ -125,7 +120,7 @@
    // Notifies that a new RenderFrame has been created.
    virtual void RenderFrameCreated(RenderFrame* render_frame) {}
  
-@@ -324,6 +327,10 @@ class CONTENT_EXPORT ContentRendererClient {
+@@ -324,6 +327,10 @@ class CONTENT_EXPORT ContentRendererClie
    // This method may invalidate the frame.
    virtual void RunScriptsAtDocumentIdle(RenderFrame* render_frame) {}
  
@@ -136,10 +131,9 @@
    // Allows subclasses to enable some runtime features before Blink has
    // started.
    virtual void SetRuntimeFeaturesDefaultsBeforeBlinkInitialization() {}
-diff --git content/renderer/render_thread_impl.cc content/renderer/render_thread_impl.cc
-index b67ee7e79eea7..13ac29a392b6e 100644
---- content/renderer/render_thread_impl.cc
-+++ content/renderer/render_thread_impl.cc
+diff -up content/renderer/render_thread_impl.cc.p2~ content/renderer/render_thread_impl.cc
+--- content/renderer/render_thread_impl.cc.p2~	2024-02-22 22:43:07.742544700 +0100
++++ content/renderer/render_thread_impl.cc	2024-02-23 23:20:51.084343853 +0100
 @@ -545,6 +545,8 @@ void RenderThreadImpl::Init() {
        GetContentClient()->renderer()->CreateURLLoaderThrottleProvider(
            blink::URLLoaderThrottleProviderType::kFrame);
@@ -149,11 +143,10 @@
    GetAssociatedInterfaceRegistry()->AddInterface<mojom::Renderer>(
        base::BindRepeating(&RenderThreadImpl::OnRendererInterfaceReceiver,
                            base::Unretained(this)));
-diff --git content/renderer/renderer_blink_platform_impl.cc content/renderer/renderer_blink_platform_impl.cc
-index 619323f485c6a..324017a67e989 100644
---- content/renderer/renderer_blink_platform_impl.cc
-+++ content/renderer/renderer_blink_platform_impl.cc
-@@ -994,6 +994,15 @@ SkBitmap* RendererBlinkPlatformImpl::GetSadPageBitmap() {
+diff -up content/renderer/renderer_blink_platform_impl.cc.p2~ content/renderer/renderer_blink_platform_impl.cc
+--- content/renderer/renderer_blink_platform_impl.cc.p2~	2024-02-22 22:43:06.746544800 +0100
++++ content/renderer/renderer_blink_platform_impl.cc	2024-02-23 23:20:51.084343853 +0100
+@@ -994,6 +994,15 @@ SkBitmap* RendererBlinkPlatformImpl::Get
  
  //------------------------------------------------------------------------------
  
@@ -169,11 +162,10 @@
  std::unique_ptr<blink::WebV8ValueConverter>
  RendererBlinkPlatformImpl::CreateWebV8ValueConverter() {
    return std::make_unique<V8ValueConverterImpl>();
-diff --git content/renderer/renderer_blink_platform_impl.h content/renderer/renderer_blink_platform_impl.h
-index ecbcf12493f77..2c529b2f07a14 100644
---- content/renderer/renderer_blink_platform_impl.h
-+++ content/renderer/renderer_blink_platform_impl.h
-@@ -236,6 +236,9 @@ class CONTENT_EXPORT RendererBlinkPlatformImpl : public BlinkPlatformImpl {
+diff -up content/renderer/renderer_blink_platform_impl.h.p2~ content/renderer/renderer_blink_platform_impl.h
+--- content/renderer/renderer_blink_platform_impl.h.p2~	2024-02-22 22:43:07.750545000 +0100
++++ content/renderer/renderer_blink_platform_impl.h	2024-02-23 23:20:51.084343853 +0100
+@@ -236,6 +236,9 @@ class CONTENT_EXPORT RendererBlinkPlatfo
    InertAndMinimumIntervalOfUserLevelMemoryPressureSignal() override;
  #endif  // BUILDFLAG(IS_ANDROID)
  
@@ -181,13 +173,12 @@
 +  void DevToolsAgentDetached() override;
 +
    // Tells this platform that the renderer is locked to a site (i.e., a scheme
-   // plus eTLD+1, such as https://google.com), or to a more specific origin.
+   // plus eTLD+1, such as https://9oo91e.qjz9zk), or to a more specific origin.
    void SetIsLockedToSite();
-diff --git content/shell/browser/shell_content_browser_client.cc content/shell/browser/shell_content_browser_client.cc
-index 3e0b86f6834c5..624610b39a399 100644
---- content/shell/browser/shell_content_browser_client.cc
-+++ content/shell/browser/shell_content_browser_client.cc
-@@ -703,7 +703,7 @@ void ShellContentBrowserClient::GetAdditionalMappedFilesForChildProcess(
+diff -up content/shell/browser/shell_content_browser_client.cc.p2~ content/shell/browser/shell_content_browser_client.cc
+--- content/shell/browser/shell_content_browser_client.cc.p2~	2024-02-22 22:43:06.818549900 +0100
++++ content/shell/browser/shell_content_browser_client.cc	2024-02-23 23:20:51.084343853 +0100
+@@ -703,7 +703,7 @@ void ShellContentBrowserClient::GetAddit
  #endif  // BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) ||
          // BUILDFLAG(IS_ANDROID)
  
@@ -196,7 +187,7 @@
      BrowserContext* context,
      bool in_memory,
      const base::FilePath& relative_partition_path,
-@@ -712,6 +712,7 @@ void ShellContentBrowserClient::ConfigureNetworkContextParams(
+@@ -712,6 +712,7 @@ void ShellContentBrowserClient::Configur
          cert_verifier_creation_params) {
    ConfigureNetworkContextParamsForShell(context, network_context_params,
                                          cert_verifier_creation_params);
@@ -204,11 +195,10 @@
  }
  
  std::vector<base::FilePath>
-diff --git content/shell/browser/shell_content_browser_client.h content/shell/browser/shell_content_browser_client.h
-index 83253e9feb3eb..ca0fd605ee613 100644
---- content/shell/browser/shell_content_browser_client.h
-+++ content/shell/browser/shell_content_browser_client.h
-@@ -140,7 +140,7 @@ class ShellContentBrowserClient : public ContentBrowserClient {
+diff -up content/shell/browser/shell_content_browser_client.h.p2~ content/shell/browser/shell_content_browser_client.h
+--- content/shell/browser/shell_content_browser_client.h.p2~	2024-02-22 22:43:06.818549900 +0100
++++ content/shell/browser/shell_content_browser_client.h	2024-02-23 23:20:51.084343853 +0100
+@@ -140,7 +140,7 @@ class ShellContentBrowserClient : public
  #endif  // BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS) ||
          // BUILDFLAG(IS_ANDROID)
    device::GeolocationManager* GetGeolocationManager() override;
@@ -217,11 +207,10 @@
        BrowserContext* context,
        bool in_memory,
        const base::FilePath& relative_partition_path,
-diff --git headless/lib/browser/headless_content_browser_client.cc headless/lib/browser/headless_content_browser_client.cc
-index 6a118e43698a1..82df4466206d2 100644
---- headless/lib/browser/headless_content_browser_client.cc
-+++ headless/lib/browser/headless_content_browser_client.cc
-@@ -297,7 +297,7 @@ bool HeadlessContentBrowserClient::IsSharedStorageSelectURLAllowed(
+diff -up headless/lib/browser/headless_content_browser_client.cc.p2~ headless/lib/browser/headless_content_browser_client.cc
+--- headless/lib/browser/headless_content_browser_client.cc.p2~	2024-02-22 22:43:08.922695400 +0100
++++ headless/lib/browser/headless_content_browser_client.cc	2024-02-23 23:20:51.084343853 +0100
+@@ -297,7 +297,7 @@ bool HeadlessContentBrowserClient::IsSha
    return true;
  }
  
@@ -230,7 +219,7 @@
      content::BrowserContext* context,
      bool in_memory,
      const base::FilePath& relative_partition_path,
-@@ -307,6 +307,7 @@ void HeadlessContentBrowserClient::ConfigureNetworkContextParams(
+@@ -307,6 +307,7 @@ void HeadlessContentBrowserClient::Confi
    HeadlessBrowserContextImpl::From(context)->ConfigureNetworkContextParams(
        in_memory, relative_partition_path, network_context_params,
        cert_verifier_creation_params);
@@ -238,11 +227,10 @@
  }
  
  std::string HeadlessContentBrowserClient::GetProduct() {
-diff --git headless/lib/browser/headless_content_browser_client.h headless/lib/browser/headless_content_browser_client.h
-index 18f90a11713b5..688549524fb17 100644
---- headless/lib/browser/headless_content_browser_client.h
-+++ headless/lib/browser/headless_content_browser_client.h
-@@ -80,7 +80,7 @@ class HeadlessContentBrowserClient : public content::ContentBrowserClient {
+diff -up headless/lib/browser/headless_content_browser_client.h.p2~ headless/lib/browser/headless_content_browser_client.h
+--- headless/lib/browser/headless_content_browser_client.h.p2~	2024-02-22 22:43:08.922695400 +0100
++++ headless/lib/browser/headless_content_browser_client.h	2024-02-23 23:20:51.084343853 +0100
+@@ -80,7 +80,7 @@ class HeadlessContentBrowserClient : pub
        const url::Origin& top_frame_origin,
        const url::Origin& accessing_origin) override;
  
diff -urN chromium-122.0.6261.69/cef/patch/patches/libxml_visibility.patch chromium-122.0.6261.69/cef/patch/patches/libxml_visibility.patch
--- chromium-122.0.6261.69/cef/patch/patches/libxml_visibility.patch	2024-02-20 19:34:39.000000000 +0100
+++ chromium-122.0.6261.69/cef/patch/patches/libxml_visibility.patch	2024-02-23 23:23:51.490197679 +0100
@@ -1,12 +1,11 @@
-diff --git third_party/libxml/BUILD.gn third_party/libxml/BUILD.gn
-index 1621a215784c9..5a13a75cea0dd 100644
---- third_party/libxml/BUILD.gn
-+++ third_party/libxml/BUILD.gn
-@@ -140,6 +140,7 @@ static_library("libxml") {
-     ":libxml_utils",
+diff -up third_party/libxml/BUILD.gn.p4~ third_party/libxml/BUILD.gn
+--- third_party/libxml/BUILD.gn.p4~	2024-02-23 23:23:12.585799609 +0100
++++ third_party/libxml/BUILD.gn	2024-02-23 23:23:37.446054076 +0100
+@@ -19,6 +19,7 @@ static_library("libxml_utils") {
+   visibility = [
      ":xml_reader",
      ":xml_writer",
 +    "//cef:*",
-     "//chromecast/internal",
-     "//testing/libfuzzer/*",
-     "//third_party/blink/renderer/*",
+     "//base/test:test_support",
+     "//services/data_decoder:lib",
+     "//services/data_decoder:xml_parser_fuzzer_deps",
