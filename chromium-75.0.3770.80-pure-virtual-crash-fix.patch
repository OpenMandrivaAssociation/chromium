diff -up chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.cc.pure-virtual-fix chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.cc
--- chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.cc.pure-virtual-fix	2019-06-07 15:03:43.302202979 -0400
+++ chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.cc	2019-06-07 15:04:25.140393048 -0400
@@ -116,4 +116,9 @@ void RenderProcessUserData::RenderProces
                      base::Unretained(process_node_.get()), info.exit_code));
 }
 
+void RenderProcessUserData::RenderProcessHostDestroyed(
+    content::RenderProcessHost* host) {
+  host->RemoveUserData(kRenderProcessUserDataKey);
+}
+
 }  // namespace performance_manager
diff -up chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.h.pure-virtual-fix chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.h
--- chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.h.pure-virtual-fix	2019-06-07 15:04:43.530039597 -0400
+++ chromium-75.0.3770.80/chrome/browser/performance_manager/render_process_user_data.h	2019-06-07 15:05:13.770458374 -0400
@@ -47,6 +47,7 @@ class RenderProcessUserData : public bas
   void RenderProcessExited(
       content::RenderProcessHost* host,
       const content::ChildProcessTerminationInfo& info) override;
+  void RenderProcessHostDestroyed(content::RenderProcessHost* host) override;
 
   // All instances are linked together in a doubly linked list to allow orderly
   // destruction at browser shutdown time.
