diff -up chromium-124.0.6367.60/third_party/blink/renderer/platform/image-decoders/jxl/jxl_image_decoder.cc.omv~ chromium-124.0.6367.60/third_party/blink/renderer/platform/image-decoders/jxl/jxl_image_decoder.cc
--- chromium-124.0.6367.60/third_party/blink/renderer/platform/image-decoders/jxl/jxl_image_decoder.cc.omv~	2024-04-19 16:03:50.368206079 +0200
+++ chromium-124.0.6367.60/third_party/blink/renderer/platform/image-decoders/jxl/jxl_image_decoder.cc	2024-04-19 16:36:53.386744052 +0200
@@ -47,11 +47,9 @@ std::unique_ptr<ColorProfile> NewColorPr
   // The input ColorProfile owns the buffer memory, make a new copy for
   // the newly created one and pass the ownership of the new copy to the new
   // color profile.
-  std::unique_ptr<uint8_t[]> owned_buffer(
-      new uint8_t[buffer_donor.GetProfile()->size]);
-  memcpy(owned_buffer.get(), buffer_donor.GetProfile()->buffer,
-         buffer_donor.GetProfile()->size);
-  new_profile.buffer = owned_buffer.get();
+  base::HeapArray<uint8_t> owned_buffer=base::HeapArray<uint8_t>::Uninit(buffer_donor.GetProfile()->size);
+  memcpy(owned_buffer.data(), buffer_donor.GetProfile()->buffer, buffer_donor.GetProfile()->size);
+  new_profile.buffer = owned_buffer.data();
   return std::make_unique<ColorProfile>(new_profile, std::move(owned_buffer));
 }
 }  // namespace
