<!DOCTYPE html>
<html lang='en'>
<head>
<title>0001-ozone-wayland-implement-text_input_manager_v3.patch - aur.git - AUR Package Repositories</title>
<meta name='generator' content='cgit v1.2.3-56-gcc08'/>
<meta name='robots' content='index, nofollow'/>
<link rel='stylesheet' type='text/css' href='/static/css/cgit.css'/>
<script type='text/javascript' src='/cgit.js'></script>
<link rel='shortcut icon' href='/static/images/favicon.ico'/>
<link rel='alternate' title='Atom feed' href='https://aur.archlinux.org/cgit/aur.git/atom/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi' type='application/atom+xml'/>
<link rel='vcs-git' href='https://aur.archlinux.org/chromium-wayland-vaapi.git/' title='aur.git Git repository'/>
</head>
<body>
		<div id="archnavbar" class="anb-aur">
			<div id="archnavbarlogo"><h1><a href="/" title="Return to the main page">Arch Linux User Repository</a></h1></div>
			<div id="archnavbarmenu">
				<ul id="archnavbarlist">
					<li id="anb-home"><a href="https://www.archlinux.org/" title="Arch news, packages, projects and more">Home</a></li>
					<li id="anb-packages"><a href="https://www.archlinux.org/packages/" title="Arch Package Database">Packages</a></li>
					<li id="anb-forums"><a href="https://bbs.archlinux.org/" title="Community forums">Forums</a></li>
					<li id="anb-wiki"><a href="https://wiki.archlinux.org/" title="Community documentation">Wiki</a></li>
					<li id="anb-bugs"><a href="https://bugs.archlinux.org/" title="Report and track bugs">Bugs</a></li>
					<li id="anb-security"><a href="https://security.archlinux.org/" title="Arch Linux Security Tracker">Security</a></li>
					<li id="anb-aur"><a href="/" title="Arch Linux User Repository">AUR</a></li>
					<li id="anb-download"><a href="https://www.archlinux.org/download/" title="Get Arch Linux">Download</a></li>
				</ul>
			</div>
		</div><!-- #archnavbar -->
<div id='cgit'><table id='header'>
<tr>
<td class='main'>AUR : chromium-wayland-vaapi.git</td></tr>
<tr><td class='sub'>AUR Package Repositories | click <a href='/pkgbase/chromium-wayland-vaapi/'>here</a> to return to the package base details page</td><td class='sub right'></td></tr></table>
<table class='tabs'><tr><td>
<a href='/cgit/aur.git/?h=chromium-wayland-vaapi'>summary</a><a href='/cgit/aur.git/log/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>log</a><a class='active' href='/cgit/aur.git/tree/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>tree</a><a href='/cgit/aur.git/commit/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>commit</a><a href='/cgit/aur.git/diff/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>diff</a><a href='/cgit/aur.git/stats/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>stats</a></td><td class='form'><form class='right' method='get' action='/cgit/aur.git/log/0001-ozone-wayland-implement-text_input_manager_v3.patch'>
<input type='hidden' name='h' value='chromium-wayland-vaapi'/><select name='qt'>
<option value='grep'>log msg</option>
<option value='author'>author</option>
<option value='committer'>committer</option>
<option value='range'>range</option>
</select>
<input class='txt' type='search' size='10' name='q' value=''/>
<input type='submit' value='search'/>
</form>
</td></tr></table>
<div class='path'>path: <a href='/cgit/aur.git/tree/?h=chromium-wayland-vaapi'>root</a>/<a href='/cgit/aur.git/tree/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>0001-ozone-wayland-implement-text_input_manager_v3.patch</a></div><div class='content'>blob: 7691178bee0be5d14c3f599f20cd5f7a49eb88c0 (<a href='/cgit/aur.git/plain/0001-ozone-wayland-implement-text_input_manager_v3.patch?h=chromium-wayland-vaapi'>plain</a>)
<table summary='blob content' class='blob'>
<tr><td class='linenumbers'><pre><a id='n1' href='#n1'>1</a>
<a id='n2' href='#n2'>2</a>
<a id='n3' href='#n3'>3</a>
<a id='n4' href='#n4'>4</a>
<a id='n5' href='#n5'>5</a>
<a id='n6' href='#n6'>6</a>
<a id='n7' href='#n7'>7</a>
<a id='n8' href='#n8'>8</a>
<a id='n9' href='#n9'>9</a>
<a id='n10' href='#n10'>10</a>
<a id='n11' href='#n11'>11</a>
<a id='n12' href='#n12'>12</a>
<a id='n13' href='#n13'>13</a>
<a id='n14' href='#n14'>14</a>
<a id='n15' href='#n15'>15</a>
<a id='n16' href='#n16'>16</a>
<a id='n17' href='#n17'>17</a>
<a id='n18' href='#n18'>18</a>
<a id='n19' href='#n19'>19</a>
<a id='n20' href='#n20'>20</a>
<a id='n21' href='#n21'>21</a>
<a id='n22' href='#n22'>22</a>
<a id='n23' href='#n23'>23</a>
<a id='n24' href='#n24'>24</a>
<a id='n25' href='#n25'>25</a>
<a id='n26' href='#n26'>26</a>
<a id='n27' href='#n27'>27</a>
<a id='n28' href='#n28'>28</a>
<a id='n29' href='#n29'>29</a>
<a id='n30' href='#n30'>30</a>
<a id='n31' href='#n31'>31</a>
<a id='n32' href='#n32'>32</a>
<a id='n33' href='#n33'>33</a>
<a id='n34' href='#n34'>34</a>
<a id='n35' href='#n35'>35</a>
<a id='n36' href='#n36'>36</a>
<a id='n37' href='#n37'>37</a>
<a id='n38' href='#n38'>38</a>
<a id='n39' href='#n39'>39</a>
<a id='n40' href='#n40'>40</a>
<a id='n41' href='#n41'>41</a>
<a id='n42' href='#n42'>42</a>
<a id='n43' href='#n43'>43</a>
<a id='n44' href='#n44'>44</a>
<a id='n45' href='#n45'>45</a>
<a id='n46' href='#n46'>46</a>
<a id='n47' href='#n47'>47</a>
<a id='n48' href='#n48'>48</a>
<a id='n49' href='#n49'>49</a>
<a id='n50' href='#n50'>50</a>
<a id='n51' href='#n51'>51</a>
<a id='n52' href='#n52'>52</a>
<a id='n53' href='#n53'>53</a>
<a id='n54' href='#n54'>54</a>
<a id='n55' href='#n55'>55</a>
<a id='n56' href='#n56'>56</a>
<a id='n57' href='#n57'>57</a>
<a id='n58' href='#n58'>58</a>
<a id='n59' href='#n59'>59</a>
<a id='n60' href='#n60'>60</a>
<a id='n61' href='#n61'>61</a>
<a id='n62' href='#n62'>62</a>
<a id='n63' href='#n63'>63</a>
<a id='n64' href='#n64'>64</a>
<a id='n65' href='#n65'>65</a>
<a id='n66' href='#n66'>66</a>
<a id='n67' href='#n67'>67</a>
<a id='n68' href='#n68'>68</a>
<a id='n69' href='#n69'>69</a>
<a id='n70' href='#n70'>70</a>
<a id='n71' href='#n71'>71</a>
<a id='n72' href='#n72'>72</a>
<a id='n73' href='#n73'>73</a>
<a id='n74' href='#n74'>74</a>
<a id='n75' href='#n75'>75</a>
<a id='n76' href='#n76'>76</a>
<a id='n77' href='#n77'>77</a>
<a id='n78' href='#n78'>78</a>
<a id='n79' href='#n79'>79</a>
<a id='n80' href='#n80'>80</a>
<a id='n81' href='#n81'>81</a>
<a id='n82' href='#n82'>82</a>
<a id='n83' href='#n83'>83</a>
<a id='n84' href='#n84'>84</a>
<a id='n85' href='#n85'>85</a>
<a id='n86' href='#n86'>86</a>
<a id='n87' href='#n87'>87</a>
<a id='n88' href='#n88'>88</a>
<a id='n89' href='#n89'>89</a>
<a id='n90' href='#n90'>90</a>
<a id='n91' href='#n91'>91</a>
<a id='n92' href='#n92'>92</a>
<a id='n93' href='#n93'>93</a>
<a id='n94' href='#n94'>94</a>
<a id='n95' href='#n95'>95</a>
<a id='n96' href='#n96'>96</a>
<a id='n97' href='#n97'>97</a>
<a id='n98' href='#n98'>98</a>
<a id='n99' href='#n99'>99</a>
<a id='n100' href='#n100'>100</a>
<a id='n101' href='#n101'>101</a>
<a id='n102' href='#n102'>102</a>
<a id='n103' href='#n103'>103</a>
<a id='n104' href='#n104'>104</a>
<a id='n105' href='#n105'>105</a>
<a id='n106' href='#n106'>106</a>
<a id='n107' href='#n107'>107</a>
<a id='n108' href='#n108'>108</a>
<a id='n109' href='#n109'>109</a>
<a id='n110' href='#n110'>110</a>
<a id='n111' href='#n111'>111</a>
<a id='n112' href='#n112'>112</a>
<a id='n113' href='#n113'>113</a>
<a id='n114' href='#n114'>114</a>
<a id='n115' href='#n115'>115</a>
<a id='n116' href='#n116'>116</a>
<a id='n117' href='#n117'>117</a>
<a id='n118' href='#n118'>118</a>
<a id='n119' href='#n119'>119</a>
<a id='n120' href='#n120'>120</a>
<a id='n121' href='#n121'>121</a>
<a id='n122' href='#n122'>122</a>
<a id='n123' href='#n123'>123</a>
<a id='n124' href='#n124'>124</a>
<a id='n125' href='#n125'>125</a>
<a id='n126' href='#n126'>126</a>
<a id='n127' href='#n127'>127</a>
<a id='n128' href='#n128'>128</a>
<a id='n129' href='#n129'>129</a>
<a id='n130' href='#n130'>130</a>
<a id='n131' href='#n131'>131</a>
<a id='n132' href='#n132'>132</a>
<a id='n133' href='#n133'>133</a>
<a id='n134' href='#n134'>134</a>
<a id='n135' href='#n135'>135</a>
<a id='n136' href='#n136'>136</a>
<a id='n137' href='#n137'>137</a>
<a id='n138' href='#n138'>138</a>
<a id='n139' href='#n139'>139</a>
<a id='n140' href='#n140'>140</a>
<a id='n141' href='#n141'>141</a>
<a id='n142' href='#n142'>142</a>
<a id='n143' href='#n143'>143</a>
<a id='n144' href='#n144'>144</a>
<a id='n145' href='#n145'>145</a>
<a id='n146' href='#n146'>146</a>
<a id='n147' href='#n147'>147</a>
<a id='n148' href='#n148'>148</a>
<a id='n149' href='#n149'>149</a>
<a id='n150' href='#n150'>150</a>
<a id='n151' href='#n151'>151</a>
<a id='n152' href='#n152'>152</a>
<a id='n153' href='#n153'>153</a>
<a id='n154' href='#n154'>154</a>
<a id='n155' href='#n155'>155</a>
<a id='n156' href='#n156'>156</a>
<a id='n157' href='#n157'>157</a>
<a id='n158' href='#n158'>158</a>
<a id='n159' href='#n159'>159</a>
<a id='n160' href='#n160'>160</a>
<a id='n161' href='#n161'>161</a>
<a id='n162' href='#n162'>162</a>
<a id='n163' href='#n163'>163</a>
<a id='n164' href='#n164'>164</a>
<a id='n165' href='#n165'>165</a>
<a id='n166' href='#n166'>166</a>
<a id='n167' href='#n167'>167</a>
<a id='n168' href='#n168'>168</a>
<a id='n169' href='#n169'>169</a>
<a id='n170' href='#n170'>170</a>
<a id='n171' href='#n171'>171</a>
<a id='n172' href='#n172'>172</a>
<a id='n173' href='#n173'>173</a>
<a id='n174' href='#n174'>174</a>
<a id='n175' href='#n175'>175</a>
<a id='n176' href='#n176'>176</a>
<a id='n177' href='#n177'>177</a>
<a id='n178' href='#n178'>178</a>
<a id='n179' href='#n179'>179</a>
<a id='n180' href='#n180'>180</a>
<a id='n181' href='#n181'>181</a>
<a id='n182' href='#n182'>182</a>
<a id='n183' href='#n183'>183</a>
<a id='n184' href='#n184'>184</a>
<a id='n185' href='#n185'>185</a>
<a id='n186' href='#n186'>186</a>
<a id='n187' href='#n187'>187</a>
<a id='n188' href='#n188'>188</a>
<a id='n189' href='#n189'>189</a>
<a id='n190' href='#n190'>190</a>
<a id='n191' href='#n191'>191</a>
<a id='n192' href='#n192'>192</a>
<a id='n193' href='#n193'>193</a>
<a id='n194' href='#n194'>194</a>
<a id='n195' href='#n195'>195</a>
<a id='n196' href='#n196'>196</a>
<a id='n197' href='#n197'>197</a>
<a id='n198' href='#n198'>198</a>
<a id='n199' href='#n199'>199</a>
<a id='n200' href='#n200'>200</a>
<a id='n201' href='#n201'>201</a>
<a id='n202' href='#n202'>202</a>
<a id='n203' href='#n203'>203</a>
<a id='n204' href='#n204'>204</a>
<a id='n205' href='#n205'>205</a>
<a id='n206' href='#n206'>206</a>
<a id='n207' href='#n207'>207</a>
<a id='n208' href='#n208'>208</a>
<a id='n209' href='#n209'>209</a>
<a id='n210' href='#n210'>210</a>
<a id='n211' href='#n211'>211</a>
<a id='n212' href='#n212'>212</a>
<a id='n213' href='#n213'>213</a>
<a id='n214' href='#n214'>214</a>
<a id='n215' href='#n215'>215</a>
<a id='n216' href='#n216'>216</a>
<a id='n217' href='#n217'>217</a>
<a id='n218' href='#n218'>218</a>
<a id='n219' href='#n219'>219</a>
<a id='n220' href='#n220'>220</a>
<a id='n221' href='#n221'>221</a>
<a id='n222' href='#n222'>222</a>
<a id='n223' href='#n223'>223</a>
<a id='n224' href='#n224'>224</a>
<a id='n225' href='#n225'>225</a>
<a id='n226' href='#n226'>226</a>
<a id='n227' href='#n227'>227</a>
<a id='n228' href='#n228'>228</a>
<a id='n229' href='#n229'>229</a>
<a id='n230' href='#n230'>230</a>
<a id='n231' href='#n231'>231</a>
<a id='n232' href='#n232'>232</a>
<a id='n233' href='#n233'>233</a>
<a id='n234' href='#n234'>234</a>
<a id='n235' href='#n235'>235</a>
<a id='n236' href='#n236'>236</a>
<a id='n237' href='#n237'>237</a>
<a id='n238' href='#n238'>238</a>
<a id='n239' href='#n239'>239</a>
<a id='n240' href='#n240'>240</a>
<a id='n241' href='#n241'>241</a>
<a id='n242' href='#n242'>242</a>
<a id='n243' href='#n243'>243</a>
<a id='n244' href='#n244'>244</a>
<a id='n245' href='#n245'>245</a>
<a id='n246' href='#n246'>246</a>
<a id='n247' href='#n247'>247</a>
<a id='n248' href='#n248'>248</a>
<a id='n249' href='#n249'>249</a>
<a id='n250' href='#n250'>250</a>
<a id='n251' href='#n251'>251</a>
<a id='n252' href='#n252'>252</a>
<a id='n253' href='#n253'>253</a>
<a id='n254' href='#n254'>254</a>
<a id='n255' href='#n255'>255</a>
<a id='n256' href='#n256'>256</a>
<a id='n257' href='#n257'>257</a>
<a id='n258' href='#n258'>258</a>
<a id='n259' href='#n259'>259</a>
<a id='n260' href='#n260'>260</a>
<a id='n261' href='#n261'>261</a>
<a id='n262' href='#n262'>262</a>
<a id='n263' href='#n263'>263</a>
<a id='n264' href='#n264'>264</a>
<a id='n265' href='#n265'>265</a>
<a id='n266' href='#n266'>266</a>
<a id='n267' href='#n267'>267</a>
<a id='n268' href='#n268'>268</a>
<a id='n269' href='#n269'>269</a>
<a id='n270' href='#n270'>270</a>
<a id='n271' href='#n271'>271</a>
<a id='n272' href='#n272'>272</a>
<a id='n273' href='#n273'>273</a>
<a id='n274' href='#n274'>274</a>
<a id='n275' href='#n275'>275</a>
<a id='n276' href='#n276'>276</a>
<a id='n277' href='#n277'>277</a>
<a id='n278' href='#n278'>278</a>
<a id='n279' href='#n279'>279</a>
<a id='n280' href='#n280'>280</a>
<a id='n281' href='#n281'>281</a>
<a id='n282' href='#n282'>282</a>
<a id='n283' href='#n283'>283</a>
<a id='n284' href='#n284'>284</a>
<a id='n285' href='#n285'>285</a>
<a id='n286' href='#n286'>286</a>
<a id='n287' href='#n287'>287</a>
<a id='n288' href='#n288'>288</a>
<a id='n289' href='#n289'>289</a>
<a id='n290' href='#n290'>290</a>
<a id='n291' href='#n291'>291</a>
<a id='n292' href='#n292'>292</a>
<a id='n293' href='#n293'>293</a>
<a id='n294' href='#n294'>294</a>
<a id='n295' href='#n295'>295</a>
<a id='n296' href='#n296'>296</a>
<a id='n297' href='#n297'>297</a>
<a id='n298' href='#n298'>298</a>
<a id='n299' href='#n299'>299</a>
<a id='n300' href='#n300'>300</a>
<a id='n301' href='#n301'>301</a>
<a id='n302' href='#n302'>302</a>
<a id='n303' href='#n303'>303</a>
<a id='n304' href='#n304'>304</a>
<a id='n305' href='#n305'>305</a>
<a id='n306' href='#n306'>306</a>
<a id='n307' href='#n307'>307</a>
<a id='n308' href='#n308'>308</a>
<a id='n309' href='#n309'>309</a>
<a id='n310' href='#n310'>310</a>
<a id='n311' href='#n311'>311</a>
<a id='n312' href='#n312'>312</a>
<a id='n313' href='#n313'>313</a>
<a id='n314' href='#n314'>314</a>
<a id='n315' href='#n315'>315</a>
<a id='n316' href='#n316'>316</a>
<a id='n317' href='#n317'>317</a>
<a id='n318' href='#n318'>318</a>
<a id='n319' href='#n319'>319</a>
<a id='n320' href='#n320'>320</a>
<a id='n321' href='#n321'>321</a>
<a id='n322' href='#n322'>322</a>
<a id='n323' href='#n323'>323</a>
<a id='n324' href='#n324'>324</a>
<a id='n325' href='#n325'>325</a>
<a id='n326' href='#n326'>326</a>
<a id='n327' href='#n327'>327</a>
<a id='n328' href='#n328'>328</a>
<a id='n329' href='#n329'>329</a>
<a id='n330' href='#n330'>330</a>
<a id='n331' href='#n331'>331</a>
<a id='n332' href='#n332'>332</a>
<a id='n333' href='#n333'>333</a>
<a id='n334' href='#n334'>334</a>
<a id='n335' href='#n335'>335</a>
<a id='n336' href='#n336'>336</a>
<a id='n337' href='#n337'>337</a>
<a id='n338' href='#n338'>338</a>
<a id='n339' href='#n339'>339</a>
<a id='n340' href='#n340'>340</a>
<a id='n341' href='#n341'>341</a>
<a id='n342' href='#n342'>342</a>
<a id='n343' href='#n343'>343</a>
<a id='n344' href='#n344'>344</a>
<a id='n345' href='#n345'>345</a>
<a id='n346' href='#n346'>346</a>
<a id='n347' href='#n347'>347</a>
<a id='n348' href='#n348'>348</a>
<a id='n349' href='#n349'>349</a>
<a id='n350' href='#n350'>350</a>
<a id='n351' href='#n351'>351</a>
<a id='n352' href='#n352'>352</a>
<a id='n353' href='#n353'>353</a>
<a id='n354' href='#n354'>354</a>
<a id='n355' href='#n355'>355</a>
<a id='n356' href='#n356'>356</a>
<a id='n357' href='#n357'>357</a>
<a id='n358' href='#n358'>358</a>
<a id='n359' href='#n359'>359</a>
<a id='n360' href='#n360'>360</a>
<a id='n361' href='#n361'>361</a>
<a id='n362' href='#n362'>362</a>
<a id='n363' href='#n363'>363</a>
<a id='n364' href='#n364'>364</a>
<a id='n365' href='#n365'>365</a>
<a id='n366' href='#n366'>366</a>
<a id='n367' href='#n367'>367</a>
<a id='n368' href='#n368'>368</a>
<a id='n369' href='#n369'>369</a>
<a id='n370' href='#n370'>370</a>
<a id='n371' href='#n371'>371</a>
<a id='n372' href='#n372'>372</a>
<a id='n373' href='#n373'>373</a>
<a id='n374' href='#n374'>374</a>
<a id='n375' href='#n375'>375</a>
<a id='n376' href='#n376'>376</a>
<a id='n377' href='#n377'>377</a>
<a id='n378' href='#n378'>378</a>
<a id='n379' href='#n379'>379</a>
<a id='n380' href='#n380'>380</a>
<a id='n381' href='#n381'>381</a>
<a id='n382' href='#n382'>382</a>
<a id='n383' href='#n383'>383</a>
<a id='n384' href='#n384'>384</a>
<a id='n385' href='#n385'>385</a>
<a id='n386' href='#n386'>386</a>
<a id='n387' href='#n387'>387</a>
<a id='n388' href='#n388'>388</a>
<a id='n389' href='#n389'>389</a>
<a id='n390' href='#n390'>390</a>
<a id='n391' href='#n391'>391</a>
<a id='n392' href='#n392'>392</a>
<a id='n393' href='#n393'>393</a>
<a id='n394' href='#n394'>394</a>
<a id='n395' href='#n395'>395</a>
<a id='n396' href='#n396'>396</a>
<a id='n397' href='#n397'>397</a>
<a id='n398' href='#n398'>398</a>
<a id='n399' href='#n399'>399</a>
<a id='n400' href='#n400'>400</a>
<a id='n401' href='#n401'>401</a>
<a id='n402' href='#n402'>402</a>
<a id='n403' href='#n403'>403</a>
<a id='n404' href='#n404'>404</a>
<a id='n405' href='#n405'>405</a>
<a id='n406' href='#n406'>406</a>
<a id='n407' href='#n407'>407</a>
<a id='n408' href='#n408'>408</a>
<a id='n409' href='#n409'>409</a>
<a id='n410' href='#n410'>410</a>
<a id='n411' href='#n411'>411</a>
<a id='n412' href='#n412'>412</a>
<a id='n413' href='#n413'>413</a>
<a id='n414' href='#n414'>414</a>
<a id='n415' href='#n415'>415</a>
<a id='n416' href='#n416'>416</a>
<a id='n417' href='#n417'>417</a>
<a id='n418' href='#n418'>418</a>
<a id='n419' href='#n419'>419</a>
<a id='n420' href='#n420'>420</a>
<a id='n421' href='#n421'>421</a>
<a id='n422' href='#n422'>422</a>
<a id='n423' href='#n423'>423</a>
<a id='n424' href='#n424'>424</a>
<a id='n425' href='#n425'>425</a>
<a id='n426' href='#n426'>426</a>
<a id='n427' href='#n427'>427</a>
<a id='n428' href='#n428'>428</a>
<a id='n429' href='#n429'>429</a>
<a id='n430' href='#n430'>430</a>
<a id='n431' href='#n431'>431</a>
<a id='n432' href='#n432'>432</a>
<a id='n433' href='#n433'>433</a>
<a id='n434' href='#n434'>434</a>
<a id='n435' href='#n435'>435</a>
<a id='n436' href='#n436'>436</a>
<a id='n437' href='#n437'>437</a>
<a id='n438' href='#n438'>438</a>
<a id='n439' href='#n439'>439</a>
<a id='n440' href='#n440'>440</a>
<a id='n441' href='#n441'>441</a>
<a id='n442' href='#n442'>442</a>
<a id='n443' href='#n443'>443</a>
<a id='n444' href='#n444'>444</a>
<a id='n445' href='#n445'>445</a>
<a id='n446' href='#n446'>446</a>
<a id='n447' href='#n447'>447</a>
<a id='n448' href='#n448'>448</a>
<a id='n449' href='#n449'>449</a>
<a id='n450' href='#n450'>450</a>
<a id='n451' href='#n451'>451</a>
<a id='n452' href='#n452'>452</a>
<a id='n453' href='#n453'>453</a>
<a id='n454' href='#n454'>454</a>
<a id='n455' href='#n455'>455</a>
<a id='n456' href='#n456'>456</a>
<a id='n457' href='#n457'>457</a>
<a id='n458' href='#n458'>458</a>
<a id='n459' href='#n459'>459</a>
<a id='n460' href='#n460'>460</a>
<a id='n461' href='#n461'>461</a>
<a id='n462' href='#n462'>462</a>
<a id='n463' href='#n463'>463</a>
<a id='n464' href='#n464'>464</a>
<a id='n465' href='#n465'>465</a>
<a id='n466' href='#n466'>466</a>
<a id='n467' href='#n467'>467</a>
<a id='n468' href='#n468'>468</a>
<a id='n469' href='#n469'>469</a>
<a id='n470' href='#n470'>470</a>
<a id='n471' href='#n471'>471</a>
<a id='n472' href='#n472'>472</a>
<a id='n473' href='#n473'>473</a>
<a id='n474' href='#n474'>474</a>
<a id='n475' href='#n475'>475</a>
<a id='n476' href='#n476'>476</a>
<a id='n477' href='#n477'>477</a>
<a id='n478' href='#n478'>478</a>
<a id='n479' href='#n479'>479</a>
<a id='n480' href='#n480'>480</a>
<a id='n481' href='#n481'>481</a>
<a id='n482' href='#n482'>482</a>
<a id='n483' href='#n483'>483</a>
<a id='n484' href='#n484'>484</a>
<a id='n485' href='#n485'>485</a>
<a id='n486' href='#n486'>486</a>
<a id='n487' href='#n487'>487</a>
<a id='n488' href='#n488'>488</a>
<a id='n489' href='#n489'>489</a>
<a id='n490' href='#n490'>490</a>
<a id='n491' href='#n491'>491</a>
<a id='n492' href='#n492'>492</a>
<a id='n493' href='#n493'>493</a>
<a id='n494' href='#n494'>494</a>
<a id='n495' href='#n495'>495</a>
<a id='n496' href='#n496'>496</a>
<a id='n497' href='#n497'>497</a>
<a id='n498' href='#n498'>498</a>
<a id='n499' href='#n499'>499</a>
<a id='n500' href='#n500'>500</a>
<a id='n501' href='#n501'>501</a>
<a id='n502' href='#n502'>502</a>
<a id='n503' href='#n503'>503</a>
<a id='n504' href='#n504'>504</a>
<a id='n505' href='#n505'>505</a>
<a id='n506' href='#n506'>506</a>
<a id='n507' href='#n507'>507</a>
<a id='n508' href='#n508'>508</a>
<a id='n509' href='#n509'>509</a>
<a id='n510' href='#n510'>510</a>
<a id='n511' href='#n511'>511</a>
<a id='n512' href='#n512'>512</a>
<a id='n513' href='#n513'>513</a>
<a id='n514' href='#n514'>514</a>
<a id='n515' href='#n515'>515</a>
<a id='n516' href='#n516'>516</a>
<a id='n517' href='#n517'>517</a>
<a id='n518' href='#n518'>518</a>
<a id='n519' href='#n519'>519</a>
<a id='n520' href='#n520'>520</a>
<a id='n521' href='#n521'>521</a>
</pre></td>
<td class='lines'><pre><code>From dba362808a97ced4f43635cbd73de6b06d156527 Mon Sep 17 00:00:00 2001
From: Moon Sungjoon &lt;sumoon&#64;seoulsaram.org&gt;
Date: Wed, 26 Apr 2023 03:25:44 +0900
Subject: [PATCH] ui/ozone/platform/wayland: Implement text_input_manager_v3

Based on the original work of Lukas Lihotzki &lt;lukas&#64;lihotzki.de&gt; in https://crrev.com/c/3015331

Bug: 1227719
Change-Id: Ib883c9087377c9f1a0dfacc45a27e3e67ccf042e
<span class="hl kwa">---</span>

diff --git a/AUTHORS b/AUTHORS
index f275151..a43a528 100644
<span class="hl kwa">--- a/AUTHORS</span>
<span class="hl kwb">+++ b/AUTHORS</span>
&#64;&#64; -942,6 +942,7 &#64;&#64; Mohit Bhalla &lt;bhallam&#64;amazon.com&gt;
 Moiseanu Rares-Marian &lt;moiseanurares&#64;gmail.com&gt;
 Momoka Yamamoto &lt;momoka.my6&#64;gmail.com&gt;
 Momoko Hattori &lt;momohatt10&#64;gmail.com&gt;
<span class="hl kwb">+Moon Sungjoon &lt;sumoon&#64;seoulsaram.org&gt;</span>
 Mostafa Sedaghat joo &lt;mostafa.sedaghat&#64;gmail.com&gt;
 Mrunal Kapade &lt;mrunal.kapade&#64;intel.com&gt;
 Munira Tursunova &lt;moonira&#64;google.com&gt;
diff --git a/third_party/wayland-protocols/BUILD.gn b/third_party/wayland-protocols/BUILD.gn
index c84ec11..dffa0aa 100644
<span class="hl kwa">--- a/third_party/wayland-protocols/BUILD.gn</span>
<span class="hl kwb">+++ b/third_party/wayland-protocols/BUILD.gn</span>
&#64;&#64; -141,7 +141,10 &#64;&#64; wayland_protocol(&quot;text_input_extension_protocol&quot;) {
 }
 
 wayland_protocol(&quot;text_input_protocol&quot;) {
<span class="hl kwa">-  sources = [ &quot;src/unstable/text-input/text-input-unstable-v1.xml&quot; ]</span>
<span class="hl kwb">+  sources = [</span>
<span class="hl kwb">+    &quot;src/unstable/text-input/text-input-unstable-v1.xml&quot;,</span>
<span class="hl kwb">+    &quot;src/unstable/text-input/text-input-unstable-v3.xml&quot;,</span>
<span class="hl kwb">+  ]</span>
 }
 
 wayland_protocol(&quot;touchpad_haptics_protocol&quot;) {
diff --git a/ui/ozone/platform/wayland/BUILD.gn b/ui/ozone/platform/wayland/BUILD.gn
index 31314f3..c22888c 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/BUILD.gn</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/BUILD.gn</span>
&#64;&#64; -221,6 +221,8 &#64;&#64; source_set(&quot;wayland&quot;) {
     &quot;host/zwp_text_input_wrapper.h&quot;,
     &quot;host/zwp_text_input_wrapper_v1.cc&quot;,
     &quot;host/zwp_text_input_wrapper_v1.h&quot;,
<span class="hl kwb">+    &quot;host/zwp_text_input_wrapper_v3.cc&quot;,</span>
<span class="hl kwb">+    &quot;host/zwp_text_input_wrapper_v3.h&quot;,</span>
     &quot;ozone_platform_wayland.cc&quot;,
     &quot;ozone_platform_wayland.h&quot;,
     &quot;wayland_utils.cc&quot;,
diff --git a/ui/ozone/platform/wayland/common/wayland_object.cc b/ui/ozone/platform/wayland/common/wayland_object.cc
index bcc48aa..009667b 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/common/wayland_object.cc</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/common/wayland_object.cc</span>
<span class="hl kwd">&#64;&#64; -30,6 +30,7 &#64;&#64;</span>
 #include &lt;surface-augmenter-client-protocol.h&gt;
 #include &lt;text-input-extension-unstable-v1-client-protocol.h&gt;
 #include &lt;text-input-unstable-v1-client-protocol.h&gt;
<span class="hl kwb">+#include &lt;text-input-unstable-v3-client-protocol.h&gt;</span>
 #include &lt;touchpad-haptics-unstable-v1-client-protocol.h&gt;
 #include &lt;viewporter-client-protocol.h&gt;
 #include &lt;wayland-client-core.h&gt;
&#64;&#64; -287,6 +288,8 &#64;&#64; IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_relative_pointer_manager_v1)
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_relative_pointer_v1)
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_text_input_manager_v1)
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_text_input_v1)
<span class="hl kwb">+IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_text_input_manager_v3)</span>
<span class="hl kwb">+IMPLEMENT_WAYLAND_OBJECT_TRAITS(zwp_text_input_v3)</span>
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zxdg_decoration_manager_v1)
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zxdg_exporter_v1)
 IMPLEMENT_WAYLAND_OBJECT_TRAITS(zxdg_exported_v1)
diff --git a/ui/ozone/platform/wayland/common/wayland_object.h b/ui/ozone/platform/wayland/common/wayland_object.h
index c84c084..0817e78 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/common/wayland_object.h</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/common/wayland_object.h</span>
&#64;&#64; -202,6 +202,8 &#64;&#64; DECLARE_WAYLAND_OBJECT_TRAITS(zwp_relative_pointer_manager_v1)
 DECLARE_WAYLAND_OBJECT_TRAITS(zwp_relative_pointer_v1)
 DECLARE_WAYLAND_OBJECT_TRAITS(zwp_text_input_manager_v1)
 DECLARE_WAYLAND_OBJECT_TRAITS(zwp_text_input_v1)
<span class="hl kwb">+DECLARE_WAYLAND_OBJECT_TRAITS(zwp_text_input_manager_v3)</span>
<span class="hl kwb">+DECLARE_WAYLAND_OBJECT_TRAITS(zwp_text_input_v3)</span>
 DECLARE_WAYLAND_OBJECT_TRAITS(zxdg_decoration_manager_v1)
 DECLARE_WAYLAND_OBJECT_TRAITS(zxdg_exporter_v1)
 DECLARE_WAYLAND_OBJECT_TRAITS(zxdg_exported_v1)
diff --git a/ui/ozone/platform/wayland/host/wayland_connection.cc b/ui/ozone/platform/wayland/host/wayland_connection.cc
index ad3bbd6..995b1e2 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/host/wayland_connection.cc</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/host/wayland_connection.cc</span>
&#64;&#64; -647,6 +647,14 &#64;&#64; void WaylandConnection::HandleGlobal(wl_registry* registry,
              strcmp(interface, &quot;zcr_text_input_extension_v1&quot;) == 0) {
     text_input_extension_v1_ = wl::Bind&lt;zcr_text_input_extension_v1&gt;(
         registry, name, std::min(version, kMaxTextInputExtensionVersion));
<span class="hl kwb">+  } else if (!text_input_manager_v3_ &amp;&amp;</span>
<span class="hl kwb">+             strcmp(interface, &quot;zwp_text_input_manager_v3&quot;) == 0) {</span>
<span class="hl kwb">+    text_input_manager_v3_ = wl::Bind&lt;zwp_text_input_manager_v3&gt;(</span>
<span class="hl kwb">+        registry, name, std::min(version, kMaxTextInputManagerVersion));</span>
<span class="hl kwb">+    if (!text_input_manager_v3_) {</span>
<span class="hl kwb">+      LOG(ERROR) &lt;&lt; &quot;Failed to bind to zwp_text_input_manager_v3 global&quot;;</span>
<span class="hl kwb">+      return;</span>
<span class="hl kwb">+    }</span>
   } else if (!xdg_decoration_manager_ &amp;&amp;
              strcmp(interface, &quot;zxdg_decoration_manager_v1&quot;) == 0) {
     xdg_decoration_manager_ = wl::Bind&lt;zxdg_decoration_manager_v1&gt;(
diff --git a/ui/ozone/platform/wayland/host/wayland_connection.h b/ui/ozone/platform/wayland/host/wayland_connection.h
index 6659bc5..f9739ea 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/host/wayland_connection.h</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/host/wayland_connection.h</span>
&#64;&#64; -149,6 +149,9 &#64;&#64; class WaylandConnection {
   zcr_text_input_extension_v1* text_input_extension_v1() const {
     return text_input_extension_v1_.get();
   }
<span class="hl kwb">+  zwp_text_input_manager_v3* text_input_manager_v3() const {</span>
<span class="hl kwb">+    return text_input_manager_v3_.get();</span>
<span class="hl kwb">+  }</span>
   zwp_linux_explicit_synchronization_v1* linux_explicit_synchronization_v1()
       const {
     return linux_explicit_synchronization_.get();
&#64;&#64; -447,6 +450,7 &#64;&#64; class WaylandConnection {
   wl::Object&lt;zcr_stylus_v2&gt; zcr_stylus_v2_;
   wl::Object&lt;zwp_text_input_manager_v1&gt; text_input_manager_v1_;
   wl::Object&lt;zcr_text_input_extension_v1&gt; text_input_extension_v1_;
<span class="hl kwb">+  wl::Object&lt;zwp_text_input_manager_v3&gt; text_input_manager_v3_;</span>
   wl::Object&lt;zwp_linux_explicit_synchronization_v1&gt;
       linux_explicit_synchronization_;
   wl::Object&lt;zxdg_decoration_manager_v1&gt; xdg_decoration_manager_;
diff --git a/ui/ozone/platform/wayland/host/wayland_input_method_context.cc b/ui/ozone/platform/wayland/host/wayland_input_method_context.cc
index caa5074..c2e1798 100644
<span class="hl kwa">--- a/ui/ozone/platform/wayland/host/wayland_input_method_context.cc</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/host/wayland_input_method_context.cc</span>
<span class="hl kwd">&#64;&#64; -35,6 +35,7 &#64;&#64;</span>
 #include &quot;ui/ozone/platform/wayland/host/wayland_seat.h&quot;
 #include &quot;ui/ozone/platform/wayland/host/wayland_window.h&quot;
 #include &quot;ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v1.h&quot;
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.h&quot;</span>
 #include &quot;ui/ozone/public/ozone_switches.h&quot;
 
 #if BUILDFLAG(USE_XKBCOMMON)
&#64;&#64; -285,11 +286,18 &#64;&#64; void WaylandInputMethodContext::Init(bool initialize_for_testing) {
   // If text input instance is not created then all ime context operations
   // are noop. This option is because in some environments someone might not
   // want to enable ime/virtual keyboard even if it&#39;s available.
<span class="hl kwa">-  if (use_ozone_wayland_vkb &amp;&amp; !text_input_ &amp;&amp;</span>
<span class="hl kwa">-      connection_-&gt;text_input_manager_v1()) {</span>
<span class="hl kwb">+  if (!use_ozone_wayland_vkb || text_input_)</span>
<span class="hl kwb">+    return;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  // Prefer text_input_manager_v1 because it is more powerful.</span>
<span class="hl kwb">+  // It supports preedit styling for example.</span>
<span class="hl kwb">+  if (connection_-&gt;text_input_manager_v1()) {</span>
     text_input_ = std::make_unique&lt;ZWPTextInputWrapperV1&gt;(
         connection_, this, connection_-&gt;text_input_manager_v1(),
         connection_-&gt;text_input_extension_v1());
<span class="hl kwb">+  } else if (connection_-&gt;text_input_manager_v3()) {</span>
<span class="hl kwb">+    text_input_ = std::make_unique&lt;ZWPTextInputWrapperV3&gt;(</span>
<span class="hl kwb">+        connection_, this, connection_-&gt;text_input_manager_v3());</span>
   }
 }
 
&#64;&#64; -657,6 +665,11 &#64;&#64; void WaylandInputMethodContext::OnCursorPosition(int32_t index,
 
 void WaylandInputMethodContext::OnDeleteSurroundingText(int32_t index,
                                                         uint32_t length) {
<span class="hl kwb">+  // Never fail if length is 0.</span>
<span class="hl kwb">+  if (length == 0) {</span>
<span class="hl kwb">+    return;</span>
<span class="hl kwb">+  }</span>
<span class="hl kwb">+</span>
   const auto&amp; [surrounding_text, utf16_offset, selection, unsused_composition] =
       surrounding_text_tracker_.predicted_state();
   DCHECK(selection.IsValid());
diff --git a/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.cc b/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.cc
new file mode 100644
index 0000000..a3ce6e4
<span class="hl kwa">--- /dev/null</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.cc</span>
<span class="hl kwd">&#64;&#64; -0,0 +1,239 &#64;&#64;</span>
<span class="hl kwb">+// Copyright 2023 The Chromium Authors</span>
<span class="hl kwb">+// Use of this source code is governed by a BSD-style license that can be</span>
<span class="hl kwb">+// found in the LICENSE file.</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.h&quot;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &lt;string&gt;</span>
<span class="hl kwb">+#include &lt;utility&gt;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &quot;base/logging.h&quot;</span>
<span class="hl kwb">+#include &quot;base/memory/ptr_util.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/base/wayland/wayland_client_input_types.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/gfx/range/range.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/wayland_connection.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/wayland_seat.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/wayland_window.h&quot;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+namespace ui {</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+// Converts Chrome&#39;s TextInputType into wayland&#39;s content_purpose.</span>
<span class="hl kwb">+// Some of TextInputType values do not have clearly corresponding wayland value,</span>
<span class="hl kwb">+// and they fallback to closer type.</span>
<span class="hl kwb">+uint32_t InputTypeToContentPurpose(TextInputType input_type) {</span>
<span class="hl kwb">+  switch (input_type) {</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_NONE:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_TEXT:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_PASSWORD:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_PASSWORD;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_SEARCH:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_EMAIL:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_EMAIL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_NUMBER:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NUMBER;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_TELEPHONE:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_PHONE;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_URL:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_URL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_DATE:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATE;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_DATE_TIME:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATETIME;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_DATE_TIME_LOCAL:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATETIME;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_MONTH:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATE;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_TIME:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_TIME;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_WEEK:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATE;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_TEXT_AREA:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_CONTENT_EDITABLE:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_DATE_TIME_FIELD:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_DATETIME;</span>
<span class="hl kwb">+    case TEXT_INPUT_TYPE_NULL:</span>
<span class="hl kwb">+      return ZWP_TEXT_INPUT_V3_CONTENT_PURPOSE_NORMAL;</span>
<span class="hl kwb">+  }</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+// Converts Chrome&#39;s TextInputType into wayland&#39;s content_hint.</span>
<span class="hl kwb">+uint32_t InputFlagsToContentHint(int input_flags) {</span>
<span class="hl kwb">+  uint32_t hint = 0;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_AUTOCOMPLETE_ON)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_COMPLETION;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_SPELLCHECK_ON)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_SPELLCHECK;</span>
<span class="hl kwb">+  // No good match. Fallback to AUTO_CORRECTION.</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_AUTOCORRECT_ON)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_SPELLCHECK;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_AUTOCAPITALIZE_CHARACTERS)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_AUTO_CAPITALIZATION;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_AUTOCAPITALIZE_WORDS)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_AUTO_CAPITALIZATION;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_AUTOCAPITALIZE_SENTENCES)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_AUTO_CAPITALIZATION;</span>
<span class="hl kwb">+  if (input_flags &amp; TEXT_INPUT_FLAG_HAS_BEEN_PASSWORD)</span>
<span class="hl kwb">+    hint |= ZWP_TEXT_INPUT_V3_CONTENT_HINT_SENSITIVE_DATA;</span>
<span class="hl kwb">+  return hint;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+ZWPTextInputWrapperV3::ZWPTextInputWrapperV3(</span>
<span class="hl kwb">+    WaylandConnection* connection,</span>
<span class="hl kwb">+    ZWPTextInputWrapperClient* client,</span>
<span class="hl kwb">+    zwp_text_input_manager_v3* text_input_manager)</span>
<span class="hl kwb">+    : connection_(connection), client_(client) {</span>
<span class="hl kwb">+  static const zwp_text_input_v3_listener text_input_listener = {</span>
<span class="hl kwb">+      &amp;OnEnter,                  // text_input_enter,</span>
<span class="hl kwb">+      &amp;OnLeave,                  // text_input_leave,</span>
<span class="hl kwb">+      &amp;OnPreeditString,          // text_input_preedit_string,</span>
<span class="hl kwb">+      &amp;OnCommitString,           // text_input_commit_string,</span>
<span class="hl kwb">+      &amp;OnDeleteSurroundingText,  // text_input_delete_surrounding_text,</span>
<span class="hl kwb">+      &amp;OnDone,                   // text_input_done,</span>
<span class="hl kwb">+  };</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  DCHECK(text_input_manager);</span>
<span class="hl kwb">+  auto* text_input = zwp_text_input_manager_v3_get_text_input(</span>
<span class="hl kwb">+      text_input_manager, connection_-&gt;seat()-&gt;wl_object());</span>
<span class="hl kwb">+  obj_ = wl::Object&lt;zwp_text_input_v3&gt;(text_input);</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  zwp_text_input_v3_add_listener(text_input, &amp;text_input_listener, this);</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+ZWPTextInputWrapperV3::~ZWPTextInputWrapperV3() = default;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::Reset() {</span>
<span class="hl kwb">+  NOTIMPLEMENTED_LOG_ONCE();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::Activate(WaylandWindow* window,</span>
<span class="hl kwb">+                                     TextInputClient::FocusReason reason) {</span>
<span class="hl kwb">+  zwp_text_input_v3_enable(obj_.get());</span>
<span class="hl kwb">+  zwp_text_input_v3_commit(obj_.get());</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::Deactivate() {</span>
<span class="hl kwb">+  zwp_text_input_v3_disable(obj_.get());</span>
<span class="hl kwb">+  zwp_text_input_v3_commit(obj_.get());</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::ShowInputPanel() {</span>
<span class="hl kwb">+  // Not directly supported in zwp_text_input_v3</span>
<span class="hl kwb">+  // Enable again to show the screen keyboard in GNOME:</span>
<span class="hl kwb">+  // https://gitlab.gnome.org/GNOME/mutter/-/merge_requests/1543#note_1051704</span>
<span class="hl kwb">+  zwp_text_input_v3_enable(obj_.get());</span>
<span class="hl kwb">+  zwp_text_input_v3_commit(obj_.get());</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::HideInputPanel() {</span>
<span class="hl kwb">+  // unsupported in zwp_text_input_v3</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::SetCursorRect(const gfx::Rect&amp; rect) {</span>
<span class="hl kwb">+  zwp_text_input_v3_set_cursor_rectangle(obj_.get(), rect.x(), rect.y(),</span>
<span class="hl kwb">+                                         rect.width(), rect.height());</span>
<span class="hl kwb">+  zwp_text_input_v3_commit(obj_.get());</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::SetSurroundingText(</span>
<span class="hl kwb">+    const std::string&amp; text,</span>
<span class="hl kwb">+    const gfx::Range&amp; selection_range) {</span>
<span class="hl kwb">+  zwp_text_input_v3_set_surrounding_text(</span>
<span class="hl kwb">+      obj_.get(), text.c_str(), selection_range.start(), selection_range.end());</span>
<span class="hl kwb">+  zwp_text_input_v3_commit(obj_.get());</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::ResetPendingState() {</span>
<span class="hl kwb">+  commit_string_.clear();</span>
<span class="hl kwb">+  delete_surrounding_text_before_length_ = 0;</span>
<span class="hl kwb">+  delete_surrounding_text_after_length_ = 0;</span>
<span class="hl kwb">+  preedit_string_.clear();</span>
<span class="hl kwb">+  preedit_string_cursor_begin_ = 0;</span>
<span class="hl kwb">+  preedit_string_cursor_end_ = 0;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::SetContentType(ui::TextInputType type,</span>
<span class="hl kwb">+                                           ui::TextInputMode mode,</span>
<span class="hl kwb">+                                           uint32_t flags,</span>
<span class="hl kwb">+                                           bool should_do_learning,</span>
<span class="hl kwb">+                                           bool can_compose_inline) {</span>
<span class="hl kwb">+  // V3 doesn&#39;t have extension</span>
<span class="hl kwb">+  uint32_t content_purpose = InputTypeToContentPurpose(type);</span>
<span class="hl kwb">+  uint32_t content_hint = InputFlagsToContentHint(flags);</span>
<span class="hl kwb">+  static_cast&lt;void&gt;(flags);</span>
<span class="hl kwb">+  static_cast&lt;void&gt;(should_do_learning);</span>
<span class="hl kwb">+  zwp_text_input_v3_set_content_type(obj_.get(), content_hint, content_purpose);</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnEnter(void* data,</span>
<span class="hl kwb">+                                    struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                                    struct wl_surface* surface) {</span>
<span class="hl kwb">+  NOTIMPLEMENTED_LOG_ONCE();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnLeave(void* data,</span>
<span class="hl kwb">+                                    struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                                    struct wl_surface* surface) {</span>
<span class="hl kwb">+  NOTIMPLEMENTED_LOG_ONCE();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnPreeditString(</span>
<span class="hl kwb">+    void* data,</span>
<span class="hl kwb">+    struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+    const char* text,</span>
<span class="hl kwb">+    int32_t cursor_begin,</span>
<span class="hl kwb">+    int32_t cursor_end) {</span>
<span class="hl kwb">+  auto* wti = static_cast&lt;ZWPTextInputWrapperV3*&gt;(data);</span>
<span class="hl kwb">+  wti-&gt;preedit_string_ = text ? text : &quot;&quot;;</span>
<span class="hl kwb">+  wti-&gt;preedit_string_cursor_begin_ = cursor_begin;</span>
<span class="hl kwb">+  wti-&gt;preedit_string_cursor_end_ = cursor_end;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnCommitString(void* data,</span>
<span class="hl kwb">+                                           struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                                           const char* text) {</span>
<span class="hl kwb">+  auto* wti = static_cast&lt;ZWPTextInputWrapperV3*&gt;(data);</span>
<span class="hl kwb">+  wti-&gt;commit_string_ = text ? text : &quot;&quot;;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnDeleteSurroundingText(</span>
<span class="hl kwb">+    void* data,</span>
<span class="hl kwb">+    struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+    uint32_t before_length,</span>
<span class="hl kwb">+    uint32_t after_length) {</span>
<span class="hl kwb">+  auto* wti = static_cast&lt;ZWPTextInputWrapperV3*&gt;(data);</span>
<span class="hl kwb">+  wti-&gt;delete_surrounding_text_before_length_ = before_length;</span>
<span class="hl kwb">+  wti-&gt;delete_surrounding_text_after_length_ = after_length;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::OnDone(void* data,</span>
<span class="hl kwb">+                                   struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                                   uint32_t serial) {</span>
<span class="hl kwb">+  auto* wti = static_cast&lt;ZWPTextInputWrapperV3*&gt;(data);</span>
<span class="hl kwb">+  wti-&gt;client_-&gt;OnPreeditString(&quot;&quot;, {}, 0);</span>
<span class="hl kwb">+  wti-&gt;client_-&gt;OnDeleteSurroundingText(</span>
<span class="hl kwb">+      -int32_t(wti-&gt;delete_surrounding_text_before_length_),</span>
<span class="hl kwb">+      int32_t(wti-&gt;delete_surrounding_text_before_length_) +</span>
<span class="hl kwb">+          int32_t(wti-&gt;delete_surrounding_text_after_length_));</span>
<span class="hl kwb">+  wti-&gt;client_-&gt;OnCommitString(wti-&gt;commit_string_.c_str());</span>
<span class="hl kwb">+  wti-&gt;client_-&gt;OnPreeditString(wti-&gt;preedit_string_.c_str(), {},</span>
<span class="hl kwb">+                                wti-&gt;preedit_string_cursor_begin_);</span>
<span class="hl kwb">+  wti-&gt;ResetPendingState();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::SetGrammarFragmentAtCursor(</span>
<span class="hl kwb">+    const ui::GrammarFragment&amp; fragment) {</span>
<span class="hl kwb">+  NOTIMPLEMENTED_LOG_ONCE();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+void ZWPTextInputWrapperV3::SetAutocorrectInfo(</span>
<span class="hl kwb">+    const gfx::Range&amp; autocorrect_range,</span>
<span class="hl kwb">+    const gfx::Rect&amp; autocorrect_bounds) {</span>
<span class="hl kwb">+  NOTIMPLEMENTED_LOG_ONCE();</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+}  // namespace ui</span>
diff --git a/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.h b/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.h
new file mode 100644
index 0000000..204d7e3
<span class="hl kwa">--- /dev/null</span>
<span class="hl kwb">+++ b/ui/ozone/platform/wayland/host/zwp_text_input_wrapper_v3.h</span>
<span class="hl kwd">&#64;&#64; -0,0 +1,98 &#64;&#64;</span>
<span class="hl kwb">+// Copyright 2023 The Chromium Authors</span>
<span class="hl kwb">+// Use of this source code is governed by a BSD-style license that can be</span>
<span class="hl kwb">+// found in the LICENSE file.</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#ifndef UI_OZONE_PLATFORM_WAYLAND_HOST_ZWP_TEXT_INPUT_WRAPPER_V3_H_</span>
<span class="hl kwb">+#define UI_OZONE_PLATFORM_WAYLAND_HOST_ZWP_TEXT_INPUT_WRAPPER_V3_H_</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &lt;cstdint&gt;</span>
<span class="hl kwb">+#include &lt;string&gt;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &lt;text-input-unstable-v3-client-protocol.h&gt;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#include &quot;base/memory/raw_ptr.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/common/wayland_object.h&quot;</span>
<span class="hl kwb">+#include &quot;ui/ozone/platform/wayland/host/zwp_text_input_wrapper.h&quot;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+namespace gfx {</span>
<span class="hl kwb">+class Rect;</span>
<span class="hl kwb">+}</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+namespace ui {</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+class WaylandConnection;</span>
<span class="hl kwb">+class WaylandWindow;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+// Text input wrapper for text-input-unstable-v3</span>
<span class="hl kwb">+class ZWPTextInputWrapperV3 : public ZWPTextInputWrapper {</span>
<span class="hl kwb">+ public:</span>
<span class="hl kwb">+  ZWPTextInputWrapperV3(WaylandConnection* connection,</span>
<span class="hl kwb">+                        ZWPTextInputWrapperClient* client,</span>
<span class="hl kwb">+                        zwp_text_input_manager_v3* text_input_manager);</span>
<span class="hl kwb">+  ZWPTextInputWrapperV3(const ZWPTextInputWrapperV3&amp;) = delete;</span>
<span class="hl kwb">+  ZWPTextInputWrapperV3&amp; operator=(const ZWPTextInputWrapperV3&amp;) = delete;</span>
<span class="hl kwb">+  ~ZWPTextInputWrapperV3() override;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  void Reset() override;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  void Activate(WaylandWindow* window,</span>
<span class="hl kwb">+                ui::TextInputClient::FocusReason reason) override;</span>
<span class="hl kwb">+  void Deactivate() override;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  void ShowInputPanel() override;</span>
<span class="hl kwb">+  void HideInputPanel() override;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  void SetCursorRect(const gfx::Rect&amp; rect) override;</span>
<span class="hl kwb">+  void SetSurroundingText(const std::string&amp; text,</span>
<span class="hl kwb">+                          const gfx::Range&amp; selection_range) override;</span>
<span class="hl kwb">+  void SetContentType(TextInputType type,</span>
<span class="hl kwb">+                      TextInputMode mode,</span>
<span class="hl kwb">+                      uint32_t flags,</span>
<span class="hl kwb">+                      bool should_do_learning,</span>
<span class="hl kwb">+                      bool can_compose_inline) override;</span>
<span class="hl kwb">+  void SetGrammarFragmentAtCursor(const ui::GrammarFragment&amp; fragment) override;</span>
<span class="hl kwb">+  void SetAutocorrectInfo(const gfx::Range&amp; autocorrect_range,</span>
<span class="hl kwb">+                          const gfx::Rect&amp; autocorrect_bounds) override;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+ private:</span>
<span class="hl kwb">+  void ResetPendingState();</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  // zwp_text_input_v3_listener</span>
<span class="hl kwb">+  static void OnEnter(void* data,</span>
<span class="hl kwb">+                      struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                      struct wl_surface* surface);</span>
<span class="hl kwb">+  static void OnLeave(void* data,</span>
<span class="hl kwb">+                      struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                      struct wl_surface* surface);</span>
<span class="hl kwb">+  static void OnPreeditString(void* data,</span>
<span class="hl kwb">+                              struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                              const char* text,</span>
<span class="hl kwb">+                              int32_t cursor_begin,</span>
<span class="hl kwb">+                              int32_t cursor_end);</span>
<span class="hl kwb">+  static void OnCommitString(void* data,</span>
<span class="hl kwb">+                             struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                             const char* text);</span>
<span class="hl kwb">+  static void OnDeleteSurroundingText(void* data,</span>
<span class="hl kwb">+                                      struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                                      uint32_t before_length,</span>
<span class="hl kwb">+                                      uint32_t after_length);</span>
<span class="hl kwb">+  static void OnDone(void* data,</span>
<span class="hl kwb">+                     struct zwp_text_input_v3* text_input,</span>
<span class="hl kwb">+                     uint32_t serial);</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  const raw_ptr&lt;WaylandConnection&gt; connection_;</span>
<span class="hl kwb">+  wl::Object&lt;zwp_text_input_v3&gt; obj_;</span>
<span class="hl kwb">+  const raw_ptr&lt;ZWPTextInputWrapperClient&gt; client_;</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+  // pending state until OnDone</span>
<span class="hl kwb">+  std::string commit_string_;</span>
<span class="hl kwb">+  uint32_t delete_surrounding_text_before_length_ = 0;</span>
<span class="hl kwb">+  uint32_t delete_surrounding_text_after_length_ = 0;</span>
<span class="hl kwb">+  std::string preedit_string_;  // preedit string of pending state</span>
<span class="hl kwb">+  int32_t preedit_string_cursor_begin_ = 0;</span>
<span class="hl kwb">+  int32_t preedit_string_cursor_end_ = 0;</span>
<span class="hl kwb">+};</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+}  // namespace ui</span>
<span class="hl kwb">+</span>
<span class="hl kwb">+#endif  // UI_OZONE_PLATFORM_WAYLAND_HOST_ZWP_TEXT_INPUT_WRAPPER_V3_H_</span>
</code></pre></td></tr></table>
</div> <!-- class=content -->
<div id="footer">
	<p>
		Copyright &copy; 2004-2023 aurweb Development Team &ndash;
		<strong>AUR packages are user produced content. Any use of the provided files is at your own risk.</strong>
	</p>
</div>
</div> <!-- id=cgit -->
</body>
</html>
