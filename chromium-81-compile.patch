diff -up chromium-81.0.4044.92/third_party/perfetto/include/perfetto/base/task_runner.h.omv~ chromium-81.0.4044.92/third_party/perfetto/include/perfetto/base/task_runner.h
--- chromium-81.0.4044.92/third_party/perfetto/include/perfetto/base/task_runner.h.omv~	2020-04-14 00:02:56.866537124 +0200
+++ chromium-81.0.4044.92/third_party/perfetto/include/perfetto/base/task_runner.h	2020-04-14 00:03:05.965638851 +0200
@@ -18,6 +18,7 @@
 #define INCLUDE_PERFETTO_BASE_TASK_RUNNER_H_
 
 #include <functional>
+#include <cstdint>
 
 #include "perfetto/base/export.h"
 
diff -up chromium-81.0.4044.92/third_party/perfetto/include/perfetto/ext/base/unix_task_runner.h.omv~ chromium-81.0.4044.92/third_party/perfetto/include/perfetto/ext/base/unix_task_runner.h
--- chromium-81.0.4044.92/third_party/perfetto/include/perfetto/ext/base/unix_task_runner.h.omv~	2020-04-14 00:02:08.613997692 +0200
+++ chromium-81.0.4044.92/third_party/perfetto/include/perfetto/ext/base/unix_task_runner.h	2020-04-14 00:02:25.772189504 +0200
@@ -65,11 +65,11 @@ class UnixTaskRunner : public TaskRunner
   bool IsIdleForTesting();
 
   // TaskRunner implementation:
-  void PostTask(std::function<void()>) override;
-  void PostDelayedTask(std::function<void()>, uint32_t delay_ms) override;
-  void AddFileDescriptorWatch(int fd, std::function<void()>) override;
-  void RemoveFileDescriptorWatch(int fd) override;
-  bool RunsTasksOnCurrentThread() const override;
+  virtual void PostTask(std::function<void()>) override;
+  virtual void PostDelayedTask(std::function<void()>, uint32_t delay_ms) override;
+  virtual void AddFileDescriptorWatch(int fd, std::function<void()>) override;
+  virtual void RemoveFileDescriptorWatch(int fd) override;
+  virtual bool RunsTasksOnCurrentThread() const override;
 
   // Returns true if the task runner is quitting, or has quit and hasn't been
   // restarted since. Exposed primarily for ThreadTaskRunner, not necessary for
diff -up chromium-81.0.4044.92/third_party/webrtc/call/rtx_receive_stream.h.omv~ chromium-81.0.4044.92/third_party/webrtc/call/rtx_receive_stream.h
--- chromium-81.0.4044.92/third_party/webrtc/call/rtx_receive_stream.h.omv~	2020-04-14 00:09:00.436602655 +0200
+++ chromium-81.0.4044.92/third_party/webrtc/call/rtx_receive_stream.h	2020-04-14 00:09:10.749718000 +0200
@@ -12,6 +12,7 @@
 #define CALL_RTX_RECEIVE_STREAM_H_
 
 #include <map>
+#include <cstdint>
 
 #include "call/rtp_packet_sink_interface.h"
 
diff -up chromium-81.0.4044.92/third_party/webrtc/modules/audio_processing/aec3/clockdrift_detector.h.omv~ chromium-81.0.4044.92/third_party/webrtc/modules/audio_processing/aec3/clockdrift_detector.h
--- chromium-81.0.4044.92/third_party/webrtc/modules/audio_processing/aec3/clockdrift_detector.h.omv~	2020-04-14 00:11:46.822463657 +0200
+++ chromium-81.0.4044.92/third_party/webrtc/modules/audio_processing/aec3/clockdrift_detector.h	2020-04-14 00:11:49.385492326 +0200
@@ -31,7 +31,7 @@ class ClockdriftDetector {
  private:
   std::array<int, 3> delay_history_;
   Level level_;
-  size_t stability_counter_;
+  std::size_t stability_counter_;
 };
 }  // namespace webrtc
 
diff -up chromium-81.0.4044.92/ui/gfx/linux/drm_util_linux.h.omv~ chromium-81.0.4044.92/ui/gfx/linux/drm_util_linux.h
--- chromium-81.0.4044.92/ui/gfx/linux/drm_util_linux.h.omv~	2020-04-14 00:16:49.078844757 +0200
+++ chromium-81.0.4044.92/ui/gfx/linux/drm_util_linux.h	2020-04-14 00:17:20.350194586 +0200
@@ -6,6 +6,7 @@
 #define UI_GFX_LINUX_DRM_UTIL_LINUX_H_
 
 #include "ui/gfx/buffer_types.h"
+#include <cstdint>
 
 namespace ui {
 
diff -up chromium-81.0.4044.92/chrome/browser/search/background/ntp_backgrounds.h.omv~ chromium-81.0.4044.92/chrome/browser/search/background/ntp_backgrounds.h
--- chromium-81.0.4044.92/chrome/browser/search/background/ntp_backgrounds.h.omv~	2020-04-14 02:09:59.003729508 +0200
+++ chromium-81.0.4044.92/chrome/browser/search/background/ntp_backgrounds.h	2020-04-14 02:10:02.814777912 +0200
@@ -9,7 +9,7 @@
 
 class GURL;
 
-const size_t kNtpBackgroundsCount = 5;
+const std::size_t kNtpBackgroundsCount = 5;
 std::array<GURL, kNtpBackgroundsCount> GetNtpBackgrounds();
 
 #endif  // CHROME_BROWSER_SEARCH_BACKGROUND_NTP_BACKGROUNDS_H_
diff -up chromium-81.0.4044.92/media/cdm/supported_cdm_versions.h.omv~ chromium-81.0.4044.92/media/cdm/supported_cdm_versions.h
--- chromium-81.0.4044.92/media/cdm/supported_cdm_versions.h.omv~	2020-04-14 00:59:10.960991072 +0200
+++ chromium-81.0.4044.92/media/cdm/supported_cdm_versions.h	2020-04-14 01:03:55.446562578 +0200
@@ -52,7 +52,7 @@ constexpr bool IsSupportedCdmModuleVersi
 // Returns whether the CDM interface of |version| is supported in the
 // implementation.
 constexpr bool IsSupportedCdmInterfaceVersion(int version) {
-  for (size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
+  for (std::size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
     if (kSupportedCdmInterfaceVersions[i].version == version)
       return true;
   }
@@ -70,7 +70,7 @@ constexpr bool IsSupportedCdmHostVersion
 
 // Returns whether the CDM interface of |version| is enabled by default.
 constexpr bool IsCdmInterfaceVersionEnabledByDefault(int version) {
-  for (size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
+  for (std::size_t i = 0; i < kSupportedCdmInterfaceVersions.size(); ++i) {
     if (kSupportedCdmInterfaceVersions[i].version == version)
       return kSupportedCdmInterfaceVersions[i].enabled;
   }
